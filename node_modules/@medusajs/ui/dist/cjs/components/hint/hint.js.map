{"version":3,"file":"hint.js","sourceRoot":"","sources":["../../../../src/components/hint/hint.tsx"],"names":[],"mappings":";;;;AAAA,6BAAuC;AACvC,qDAA8B;AAE9B,2CAAwD;AACxD,yCAAqC;AAErC,MAAM,YAAY,GAAG,IAAA,SAAG,EAAC;IACvB,IAAI,EAAE,qDAAqD;IAC3D,QAAQ,EAAE;QACR,OAAO,EAAE;YACP,IAAI,EAAE,mBAAmB;YACzB,KAAK,EAAE,kBAAkB;SAC1B;KACF;IACD,eAAe,EAAE;QACf,OAAO,EAAE,MAAM;KAChB;CACF,CAAC,CAAA;AAKF,MAAM,IAAI,GAAG,KAAK,CAAC,UAAU,CAC3B,CAAC,EACC,SAAS;AACT;;GAEG;AACH,OAAO,GAAG,MAAM,EAChB,QAAQ,EACR,GAAG,KAAK,EACE,EAAE,GAAG,EAAE,EAAE;IACnB,OAAO,CACL,8BACE,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,IAAA,SAAG,EAAC,YAAY,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,CAAC,KAChD,KAAK;QAER,OAAO,KAAK,OAAO,IAAI,oBAAC,8BAAsB,OAAG;QACjD,QAAQ,CACJ,CACR,CAAA;AACH,CAAC,CACF,CAAA;AAGQ,oBAAI;AAFb,IAAI,CAAC,WAAW,GAAG,MAAM,CAAA","sourcesContent":["import { VariantProps, cva } from \"cva\"\nimport * as React from \"react\"\n\nimport { ExclamationCircleSolid } from \"@medusajs/icons\"\nimport { clx } from \"../../utils/clx\"\n\nconst hintVariants = cva({\n  base: \"txt-compact-xsmall inline-flex items-center gap-x-2\",\n  variants: {\n    variant: {\n      info: \"text-ui-fg-subtle\",\n      error: \"text-ui-fg-error\",\n    },\n  },\n  defaultVariants: {\n    variant: \"info\",\n  },\n})\n\ninterface HintProps extends VariantProps<typeof hintVariants>,\n  React.ComponentPropsWithoutRef<\"span\"> {}\n\nconst Hint = React.forwardRef<HTMLSpanElement, HintProps>(\n  ({ \n    className, \n    /**\n     * The hint's style.\n     */\n    variant = \"info\", \n    children, \n    ...props \n  }: HintProps, ref) => {\n    return (\n      <span\n        ref={ref}\n        className={clx(hintVariants({ variant }), className)}\n        {...props}\n      >\n        {variant === \"error\" && <ExclamationCircleSolid />}\n        {children}\n      </span>\n    )\n  }\n)\nHint.displayName = \"Hint\"\n\nexport { Hint }\n"]}