{"version":3,"file":"avatar.js","sourceRoot":"","sources":["../../../../src/components/avatar/avatar.tsx"],"names":[],"mappings":";AAAA,YAAY,CAAA;;;;AAEZ,2EAAoD;AACpD,6BAA4C;AAC5C,qDAA8B;AAE9B,qCAAiC;AAEjC,MAAM,cAAc,GAAG,IAAA,SAAG,EAAC;IACzB,IAAI,EAAE,0FAA0F;IAChG,QAAQ,EAAE;QACR,OAAO,EAAE;YACP,OAAO,EAAE,YAAY;YACrB,OAAO,EAAE,cAAc;SACxB;QACD,IAAI,EAAE;YACJ,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,WAAW;SACnB;KACF;IACD,eAAe,EAAE;QACf,OAAO,EAAE,SAAS;QAClB,IAAI,EAAE,MAAM;KACb;CACF,CAAC,CAAA;AAEF,MAAM,aAAa,GAAG,IAAA,SAAG,EAAC;IACxB,IAAI,EAAE,0CAA0C;IAChD,QAAQ,EAAE;QACR,OAAO,EAAE;YACP,OAAO,EAAE,YAAY;YACrB,OAAO,EAAE,cAAc;SACxB;QACD,IAAI,EAAE;YACJ,IAAI,EAAE,gCAAgC;YACtC,KAAK,EAAE,iCAAiC;SACzC;KACF;IACD,eAAe,EAAE;QACf,OAAO,EAAE,SAAS;QAClB,IAAI,EAAE,MAAM;KACb;CACF,CAAC,CAAA;AAYF;;GAEG;AACH,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAI7B,CACE;AACE;;GAEG;AACH,GAAG;AACH;;GAEG;AACH,QAAQ;AACR;;GAEG;AACH,OAAO,GAAG,SAAS;AACnB;;GAEG;AACH,IAAI,GAAG,MAAM,EACb,SAAS,EACT,GAAG,KAAK,EACI,EACd,GAAG,EACH,EAAE;IACF,OAAO,CACL,oBAAC,UAAU,CAAC,IAAI,IACd,GAAG,EAAE,GAAG,KACJ,KAAK,EACT,SAAS,EAAE,IAAA,SAAG,EAAC,cAAc,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,SAAS,CAAC;QAE3D,GAAG,IAAI,CACN,oBAAC,UAAU,CAAC,KAAK,IACf,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,aAAa,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,GAC3C,CACH;QACD,oBAAC,UAAU,CAAC,QAAQ,IAClB,SAAS,EAAE,IAAA,SAAG,EACZ,aAAa,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,EAChC,uGAAuG,CACxG,IAEA,QAAQ,CACW,CACN,CACnB,CAAA;AACH,CAAC,CACF,CAAA;AAGQ,wBAAM;AAFf,MAAM,CAAC,WAAW,GAAG,QAAQ,CAAA","sourcesContent":["\"use client\"\n\nimport * as Primitives from \"@radix-ui/react-avatar\"\nimport { cva, type VariantProps } from \"cva\"\nimport * as React from \"react\"\n\nimport { clx } from \"@/utils/clx\"\n\nconst avatarVariants = cva({\n  base: \"border-ui-border-strong flex shrink-0 items-center justify-center overflow-hidden border\",\n  variants: {\n    variant: {\n      squared: \"rounded-lg\",\n      rounded: \"rounded-full\",\n    },\n    size: {\n      base: \"h-8 w-8\",\n      large: \"h-10 w-10\",\n    },\n  },\n  defaultVariants: {\n    variant: \"rounded\",\n    size: \"base\",\n  },\n})\n\nconst innerVariants = cva({\n  base: \"aspect-square object-cover object-center\",\n  variants: {\n    variant: {\n      squared: \"rounded-lg\",\n      rounded: \"rounded-full\",\n    },\n    size: {\n      base: \"txt-compact-small-plus h-6 w-6\",\n      large: \"txt-compact-medium-plus h-8 w-8\",\n    },\n  },\n  defaultVariants: {\n    variant: \"rounded\",\n    size: \"base\",\n  },\n})\n\ninterface AvatarProps\n  extends Omit<\n      React.ComponentPropsWithoutRef<typeof Primitives.Root>,\n      \"asChild\" | \"children\" | \"size\"\n    >,\n    VariantProps<typeof avatarVariants> {\n  src?: string\n  fallback: string\n}\n\n/**\n * This component is based on the [Radix UI Avatar](https://www.radix-ui.com/primitives/docs/components/avatar) primitive.\n */\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof Primitives.Root>,\n  AvatarProps\n>(\n  (\n    { \n      /**\n       * The URL of the image used in the Avatar.\n       */\n      src, \n      /**\n       * Text to show in the avatar if the URL provided in `src` can't be opened.\n       */\n      fallback, \n      /**\n       * The style of the avatar.\n       */\n      variant = \"rounded\", \n      /**\n       * The size of the avatar's border radius.\n       */\n      size = \"base\",\n      className, \n      ...props\n    }: AvatarProps,\n    ref\n  ) => {\n    return (\n      <Primitives.Root\n        ref={ref}\n        {...props}\n        className={clx(avatarVariants({ variant, size }), className)}\n      >\n        {src && (\n          <Primitives.Image\n            src={src}\n            className={innerVariants({ variant, size })}\n          />\n        )}\n        <Primitives.Fallback\n          className={clx(\n            innerVariants({ variant, size }),\n            \"bg-ui-bg-component text-ui-fg-subtle pointer-events-none flex select-none items-center justify-center\"\n          )}\n        >\n          {fallback}\n        </Primitives.Fallback>\n      </Primitives.Root>\n    )\n  }\n)\nAvatar.displayName = \"Avatar\"\n\nexport { Avatar }\n"]}