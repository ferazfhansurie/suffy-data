{"version":3,"file":"emoji-picker-react.cjs.production.min.js","sources":["../src/DomUtils/classNames.ts","../src/Stylesheet/stylesheet.ts","../src/DomUtils/focusElement.ts","../src/components/context/ElementRefContext.tsx","../src/types/exposedTypes.ts","../src/config/categoryConfig.ts","../src/dataUtils/DataTypes.ts","../src/data/skinToneVariations.ts","../src/dataUtils/alphaNumericEmojiIndex.ts","../src/dataUtils/emojiSelectors.ts","../src/config/cdnUrls.ts","../src/config/config.ts","../src/components/context/PickerConfigContext.tsx","../src/config/mutableConfig.ts","../src/config/useConfig.ts","../src/hooks/useDebouncedState.ts","../src/hooks/useDisallowedEmojis.ts","../src/components/context/PickerContext.tsx","../src/hooks/useInitialLoad.ts","../src/hooks/useDisallowMouseMove.ts","../src/DomUtils/elementPositionInRow.ts","../src/DomUtils/selectors.ts","../src/dataUtils/parseNativeEmoji.ts","../src/dataUtils/suggested.ts","../src/typeRefinements/typeRefinements.ts","../src/hooks/useCloseAllOpenToggles.ts","../src/hooks/useSetVariationPicker.ts","../src/hooks/useMouseDownHandlers.ts","../src/DomUtils/scrollTo.ts","../src/hooks/useFocus.ts","../src/hooks/useFilter.ts","../node_modules/style-inject/dist/style-inject.es.js","../src/components/atoms/Button.tsx","../src/components/emoji/ClickableEmojiButton.tsx","../src/components/emoji/EmojiImg.tsx","../src/components/emoji/NativeEmoji.tsx","../src/components/emoji/ViewOnlyEmoji.tsx","../src/components/emoji/Emoji.tsx","../src/components/body/EmojiCategory.tsx","../src/components/body/Suggested.tsx","../src/components/body/EmojiList.tsx","../src/hooks/useHideEmojisByUniocode.ts","../src/hooks/useIsEmojiHidden.ts","../src/components/body/EmojiVariationPicker.tsx","../src/DomUtils/keyboardNavigation.ts","../src/components/body/Body.tsx","../src/hooks/useOnScroll.ts","../src/components/Layout/Flex.tsx","../src/components/header/SkinTonePicker.tsx","../src/hooks/useShouldShowSkinTonePicker.ts","../src/components/Layout/Space.tsx","../src/components/Layout/Absolute.tsx","../src/components/Layout/Relative.tsx","../src/components/footer/Preview.tsx","../src/hooks/useEmojiPreviewEvents.ts","../src/hooks/useIsSearchMode.ts","../src/components/navigation/CategoryNavigation.tsx","../src/hooks/useScrollCategoryIntoView.ts","../src/hooks/useActiveCategoryScrollDetection.ts","../src/DomUtils/categoryNameFromDom.ts","../src/hooks/useShouldHideCustomEmojis.ts","../src/components/header/CssSearch.tsx","../src/hooks/useKeyboardNavigation.ts","../src/components/header/Search.tsx","../src/components/header/Header.tsx","../src/DomUtils/getActiveElement.ts","../src/hooks/preloadEmoji.ts","../src/components/main/PickerMain.tsx","../src/hooks/useOnFocus.ts","../src/EmojiPickerReact.tsx","../src/components/ErrorBoundary.tsx","../src/components/emoji/ExportedEmoji.tsx","../src/index.tsx"],"sourcesContent":["export enum ClassNames {\n  hiddenOnSearch = 'epr-hidden-on-search',\n  searchActive = 'epr-search-active',\n  hidden = 'epr-hidden',\n  visible = 'epr-visible',\n  active = 'epr-active',\n  emoji = 'epr-emoji',\n  category = 'epr-emoji-category',\n  label = 'epr-emoji-category-label',\n  categoryContent = 'epr-emoji-category-content',\n  emojiHasVariations = 'epr-emoji-has-variations',\n  scrollBody = 'epr-body',\n  emojiList = 'epr-emoji-list',\n  external = '__EmojiPicker__',\n  emojiPicker = 'EmojiPickerReact',\n  open = 'epr-open',\n  vertical = 'epr-vertical',\n  horizontal = 'epr-horizontal',\n  variationPicker = 'epr-emoji-variation-picker',\n  darkTheme = 'epr-dark-theme',\n  autoTheme = 'epr-auto-theme'\n}\n\nexport function asSelectors(...classNames: ClassNames[]): string {\n  return classNames.map(c => `.${c}`).join('');\n}\n","import { createSheet } from 'flairup';\n\nexport const stylesheet = createSheet('epr');\n","import { NullableElement } from './selectors';\n\nexport function focusElement(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    element.focus();\n  });\n}\n\nexport function focusPrevElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const prev = element.previousElementSibling as HTMLElement;\n\n  focusElement(prev);\n}\n\nexport function focusNextElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const next = element.nextElementSibling as HTMLElement;\n\n  focusElement(next);\n}\n\nexport function focusFirstElementChild(element: NullableElement) {\n  if (!element) return;\n\n  const first = element.firstElementChild as HTMLElement;\n\n  focusElement(first);\n}\n","import * as React from 'react';\n\nimport { focusElement } from '../../DomUtils/focusElement';\nimport { NullableElement } from '../../DomUtils/selectors';\n\nexport function ElementRefContextProvider({\n  children\n}: {\n  children: React.ReactNode;\n}) {\n  const PickerMainRef = React.useRef<HTMLElement>(null);\n  const AnchoredEmojiRef = React.useRef<HTMLElement>(null);\n  const BodyRef = React.useRef<HTMLDivElement>(null);\n  const SearchInputRef = React.useRef<HTMLInputElement>(null);\n  const SkinTonePickerRef = React.useRef<HTMLDivElement>(null);\n  const CategoryNavigationRef = React.useRef<HTMLDivElement>(null);\n  const VariationPickerRef = React.useRef<HTMLDivElement>(null);\n\n  return (\n    <ElementRefContext.Provider\n      value={{\n        AnchoredEmojiRef,\n        BodyRef,\n        CategoryNavigationRef,\n        PickerMainRef,\n        SearchInputRef,\n        SkinTonePickerRef,\n        VariationPickerRef\n      }}\n    >\n      {children}\n    </ElementRefContext.Provider>\n  );\n}\n\nexport type ElementRef<\n  E extends HTMLElement = HTMLElement\n> = React.MutableRefObject<E | null>;\n\ntype ElementRefs = {\n  PickerMainRef: ElementRef;\n  AnchoredEmojiRef: ElementRef;\n  SkinTonePickerRef: ElementRef<HTMLDivElement>;\n  SearchInputRef: ElementRef<HTMLInputElement>;\n  BodyRef: ElementRef<HTMLDivElement>;\n  CategoryNavigationRef: ElementRef<HTMLDivElement>;\n  VariationPickerRef: ElementRef<HTMLDivElement>;\n};\n\nconst ElementRefContext = React.createContext<ElementRefs>({\n  AnchoredEmojiRef: React.createRef(),\n  BodyRef: React.createRef(),\n  CategoryNavigationRef: React.createRef(),\n  PickerMainRef: React.createRef(),\n  SearchInputRef: React.createRef(),\n  SkinTonePickerRef: React.createRef(),\n  VariationPickerRef: React.createRef()\n});\n\nfunction useElementRef() {\n  return React.useContext(ElementRefContext);\n}\n\nexport function usePickerMainRef() {\n  return useElementRef()['PickerMainRef'];\n}\n\nexport function useAnchoredEmojiRef() {\n  return useElementRef()['AnchoredEmojiRef'];\n}\n\nexport function useSetAnchoredEmojiRef(): (target: NullableElement) => void {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return (target: NullableElement) => {\n    if (target === null && AnchoredEmojiRef.current !== null) {\n      focusElement(AnchoredEmojiRef.current);\n    }\n\n    AnchoredEmojiRef.current = target;\n  };\n}\n\nexport function useBodyRef() {\n  return useElementRef()['BodyRef'];\n}\n\nexport function useSearchInputRef() {\n  return useElementRef()['SearchInputRef'];\n}\n\nexport function useSkinTonePickerRef() {\n  return useElementRef()['SkinTonePickerRef'];\n}\n\nexport function useCategoryNavigationRef() {\n  return useElementRef()['CategoryNavigationRef'];\n}\n\nexport function useVariationPickerRef() {\n  return useElementRef()['VariationPickerRef'];\n}\n","export type EmojiClickData = {\n  activeSkinTone: SkinTones;\n  unified: string;\n  unifiedWithoutSkinTone: string;\n  emoji: string;\n  names: string[];\n  imageUrl: string;\n  getImageUrl: (emojiStyle?: EmojiStyle) => string;\n  isCustom: boolean;\n};\n\nexport enum SuggestionMode {\n  RECENT = 'recent',\n  FREQUENT = 'frequent'\n}\n\nexport enum EmojiStyle {\n  NATIVE = 'native',\n  APPLE = 'apple',\n  TWITTER = 'twitter',\n  GOOGLE = 'google',\n  FACEBOOK = 'facebook'\n}\n\nexport enum Theme {\n  DARK = 'dark',\n  LIGHT = 'light',\n  AUTO = 'auto'\n}\n\nexport enum SkinTones {\n  NEUTRAL = 'neutral',\n  LIGHT = '1f3fb',\n  MEDIUM_LIGHT = '1f3fc',\n  MEDIUM = '1f3fd',\n  MEDIUM_DARK = '1f3fe',\n  DARK = '1f3ff'\n}\n\nexport enum Categories {\n  SUGGESTED = 'suggested',\n  CUSTOM = 'custom',\n  SMILEYS_PEOPLE = 'smileys_people',\n  ANIMALS_NATURE = 'animals_nature',\n  FOOD_DRINK = 'food_drink',\n  TRAVEL_PLACES = 'travel_places',\n  ACTIVITIES = 'activities',\n  OBJECTS = 'objects',\n  SYMBOLS = 'symbols',\n  FLAGS = 'flags'\n}\n\nexport enum SkinTonePickerLocation {\n  SEARCH = 'SEARCH',\n  PREVIEW = 'PREVIEW'\n}\n","import { Categories, SuggestionMode } from '../types/exposedTypes';\n\nexport { Categories };\n\nconst categoriesOrdered: Categories[] = [\n  Categories.SUGGESTED,\n  Categories.CUSTOM,\n  Categories.SMILEYS_PEOPLE,\n  Categories.ANIMALS_NATURE,\n  Categories.FOOD_DRINK,\n  Categories.TRAVEL_PLACES,\n  Categories.ACTIVITIES,\n  Categories.OBJECTS,\n  Categories.SYMBOLS,\n  Categories.FLAGS\n];\n\nexport const SuggestedRecent: CategoryConfig = {\n  name: 'Recently Used',\n  category: Categories.SUGGESTED\n};\n\nexport type CustomCategoryConfig = {\n  category: Categories.CUSTOM;\n  name: string;\n};\n\nconst configByCategory: Record<Categories, CategoryConfig> = {\n  [Categories.SUGGESTED]: {\n    category: Categories.SUGGESTED,\n    name: 'Frequently Used'\n  },\n  [Categories.CUSTOM]: {\n    category: Categories.CUSTOM,\n    name: 'Custom Emojis'\n  },\n  [Categories.SMILEYS_PEOPLE]: {\n    category: Categories.SMILEYS_PEOPLE,\n    name: 'Smileys & People'\n  },\n  [Categories.ANIMALS_NATURE]: {\n    category: Categories.ANIMALS_NATURE,\n    name: 'Animals & Nature'\n  },\n  [Categories.FOOD_DRINK]: {\n    category: Categories.FOOD_DRINK,\n    name: 'Food & Drink'\n  },\n  [Categories.TRAVEL_PLACES]: {\n    category: Categories.TRAVEL_PLACES,\n    name: 'Travel & Places'\n  },\n  [Categories.ACTIVITIES]: {\n    category: Categories.ACTIVITIES,\n    name: 'Activities'\n  },\n  [Categories.OBJECTS]: {\n    category: Categories.OBJECTS,\n    name: 'Objects'\n  },\n  [Categories.SYMBOLS]: {\n    category: Categories.SYMBOLS,\n    name: 'Symbols'\n  },\n  [Categories.FLAGS]: {\n    category: Categories.FLAGS,\n    name: 'Flags'\n  }\n};\n\nexport function baseCategoriesConfig(\n  modifiers?: Record<Categories, CategoryConfig>\n): CategoriesConfig {\n  return categoriesOrdered.map(category => {\n    return {\n      ...configByCategory[category],\n      ...(modifiers && modifiers[category] && modifiers[category])\n    };\n  });\n}\n\nexport function categoryFromCategoryConfig(category: CategoryConfig) {\n  return category.category;\n}\n\nexport function categoryNameFromCategoryConfig(category: CategoryConfig) {\n  return category.name;\n}\n\nexport type CategoriesConfig = CategoryConfig[];\n\nexport type CategoryConfig = {\n  category: Categories;\n  name: string;\n};\n\nexport type UserCategoryConfig = Array<Categories | CategoryConfig>;\n\nexport function mergeCategoriesConfig(\n  userCategoriesConfig: UserCategoryConfig = [],\n  modifiers: CategoryConfigModifiers = {}\n): CategoriesConfig {\n  const extra = {} as Record<Categories, CategoryConfig>;\n\n  if (modifiers.suggestionMode === SuggestionMode.RECENT) {\n    extra[Categories.SUGGESTED] = SuggestedRecent;\n  }\n\n  const base = baseCategoriesConfig(extra);\n  if (!userCategoriesConfig?.length) {\n    return base;\n  }\n\n  return userCategoriesConfig.map(category => {\n    if (typeof category === 'string') {\n      return getBaseConfigByCategory(category, extra[category]);\n    }\n\n    return {\n      ...getBaseConfigByCategory(category.category, extra[category.category]),\n      ...category\n    };\n  });\n}\n\nfunction getBaseConfigByCategory(\n  category: Categories,\n  modifier: CategoryConfig = {} as CategoryConfig\n) {\n  return Object.assign(configByCategory[category], modifier);\n}\n\ntype CategoryConfigModifiers = {\n  suggestionMode?: SuggestionMode;\n};\n","import emojis from '../data/emojis';\n\nexport enum EmojiProperties {\n  name = 'n',\n  unified = 'u',\n  variations = 'v',\n  added_in = 'a',\n  imgUrl = 'imgUrl'\n}\n\nexport interface DataEmoji extends WithName {\n  [EmojiProperties.unified]: string;\n  [EmojiProperties.variations]?: string[];\n  [EmojiProperties.added_in]: string;\n  [EmojiProperties.imgUrl]?: string;\n}\n\nexport type DataEmojis = DataEmoji[];\n\nexport type DataGroups = keyof typeof emojis;\n\nexport type WithName = {\n  [EmojiProperties.name]: string[];\n};\n","import { SkinTones } from '../types/exposedTypes';\n\nconst skinToneVariations = [\n  SkinTones.NEUTRAL,\n  SkinTones.LIGHT,\n  SkinTones.MEDIUM_LIGHT,\n  SkinTones.MEDIUM,\n  SkinTones.MEDIUM_DARK,\n  SkinTones.DARK\n];\n\nexport const skinTonesNamed = Object.entries(SkinTones).reduce(\n  (acc, [key, value]) => {\n    acc[value] = key;\n    return acc;\n  },\n  {} as Record<string, string>\n);\n\nexport const skinTonesMapped: Record<\n  string,\n  string\n> = skinToneVariations.reduce(\n  (mapped, skinTone) =>\n    Object.assign(mapped, {\n      [skinTone]: skinTone\n    }),\n  {}\n);\n\nexport default skinToneVariations;\n","import { DataEmoji } from './DataTypes';\nimport { allEmojis, emojiNames, emojiUnified } from './emojiSelectors';\n\nexport const alphaNumericEmojiIndex: BaseIndex = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((searchIndex, emoji) => {\n    indexEmoji(emoji);\n    return searchIndex;\n  }, alphaNumericEmojiIndex as BaseIndex);\n});\n\ntype BaseIndex = Record<string, Record<string, DataEmoji>>;\n\nexport function indexEmoji(emoji: DataEmoji): void {\n  const joinedNameString = emojiNames(emoji)\n    .flat()\n    .join('')\n    .toLowerCase()\n    .replace(/[^a-zA-Z\\d]/g, '')\n    .split('');\n\n  joinedNameString.forEach(char => {\n    alphaNumericEmojiIndex[char] = alphaNumericEmojiIndex[char] ?? {};\n\n    alphaNumericEmojiIndex[char][emojiUnified(emoji)] = emoji;\n  });\n}\n","import { Categories } from '../config/categoryConfig';\nimport { cdnUrl } from '../config/cdnUrls';\nimport { CustomEmoji } from '../config/customEmojiConfig';\nimport emojis from '../data/emojis';\nimport skinToneVariations, {\n  skinTonesMapped\n} from '../data/skinToneVariations';\nimport { EmojiStyle, SkinTones } from '../types/exposedTypes';\n\nimport { DataEmoji, DataEmojis, EmojiProperties, WithName } from './DataTypes';\nimport { indexEmoji } from './alphaNumericEmojiIndex';\n\nexport function emojiNames(emoji: WithName): string[] {\n  return emoji[EmojiProperties.name] ?? [];\n}\n\nexport function addedIn(emoji: DataEmoji): number {\n  return parseFloat(emoji[EmojiProperties.added_in]);\n}\n\nexport function emojiName(emoji?: WithName): string {\n  if (!emoji) {\n    return '';\n  }\n\n  return emojiNames(emoji)[0];\n}\n\nexport function unifiedWithoutSkinTone(unified: string): string {\n  const splat = unified.split('-');\n  const [skinTone] = splat.splice(1, 1);\n\n  if (skinTonesMapped[skinTone]) {\n    return splat.join('-');\n  }\n\n  return unified;\n}\n\nexport function emojiUnified(emoji: DataEmoji, skinTone?: string): string {\n  const unified = emoji[EmojiProperties.unified];\n\n  if (!skinTone || !emojiHasVariations(emoji)) {\n    return unified;\n  }\n\n  return emojiVariationUnified(emoji, skinTone) ?? unified;\n}\n\nexport function emojisByCategory(category: Categories): DataEmojis {\n  // @ts-ignore\n  return emojis?.[category] ?? [];\n}\n\n// WARNING: DO NOT USE DIRECTLY\nexport function emojiUrlByUnified(\n  unified: string,\n  emojiStyle: EmojiStyle\n): string {\n  return `${cdnUrl(emojiStyle)}${unified}.png`;\n}\n\nexport function emojiVariations(emoji: DataEmoji): string[] {\n  return emoji[EmojiProperties.variations] ?? [];\n}\n\nexport function emojiHasVariations(emoji: DataEmoji): boolean {\n  return emojiVariations(emoji).length > 0;\n}\n\nexport function emojiVariationUnified(\n  emoji: DataEmoji,\n  skinTone?: string\n): string | undefined {\n  return skinTone\n    ? emojiVariations(emoji).find(variation => variation.includes(skinTone))\n    : emojiUnified(emoji);\n}\n\nexport function emojiByUnified(unified?: string): DataEmoji | undefined {\n  if (!unified) {\n    return;\n  }\n\n  if (allEmojisByUnified[unified]) {\n    return allEmojisByUnified[unified];\n  }\n\n  const withoutSkinTone = unifiedWithoutSkinTone(unified);\n  return allEmojisByUnified[withoutSkinTone];\n}\n\nexport const allEmojis: DataEmojis = Object.values(emojis).flat();\n\nexport function setCustomEmojis(customEmojis: CustomEmoji[]): void {\n  emojis[Categories.CUSTOM].length = 0;\n\n  customEmojis.forEach(emoji => {\n    const emojiData = customToRegularEmoji(emoji);\n\n    emojis[Categories.CUSTOM].push(emojiData as never);\n\n    if (allEmojisByUnified[emojiData[EmojiProperties.unified]]) {\n      return;\n    }\n\n    allEmojis.push(emojiData);\n    allEmojisByUnified[emojiData[EmojiProperties.unified]] = emojiData;\n    indexEmoji(emojiData);\n  });\n}\n\nfunction customToRegularEmoji(emoji: CustomEmoji): DataEmoji {\n  return {\n    [EmojiProperties.name]: emoji.names.map(name => name.toLowerCase()),\n    [EmojiProperties.unified]: emoji.id.toLowerCase(),\n    [EmojiProperties.added_in]: '0',\n    [EmojiProperties.imgUrl]: emoji.imgUrl\n  };\n}\n\nconst allEmojisByUnified: {\n  [unified: string]: DataEmoji;\n} = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((allEmojis, Emoji) => {\n    allEmojis[emojiUnified(Emoji)] = Emoji;\n\n    if (emojiHasVariations(Emoji)) {\n      emojiVariations(Emoji).forEach(variation => {\n        allEmojis[variation] = Emoji;\n      });\n    }\n\n    return allEmojis;\n  }, allEmojisByUnified);\n});\n\nexport function activeVariationFromUnified(unified: string): SkinTones | null {\n  const [, suspectedSkinTone] = unified.split('-') as [string, SkinTones];\n  return skinToneVariations.includes(suspectedSkinTone)\n    ? suspectedSkinTone\n    : null;\n}\n","import { EmojiStyle } from '../types/exposedTypes';\n\nconst CDN_URL_APPLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-apple/img/apple/64/';\nconst CDN_URL_FACEBOOK =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-facebook/img/facebook/64/';\nconst CDN_URL_TWITTER =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-twitter/img/twitter/64/';\nconst CDN_URL_GOOGLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-google/img/google/64/';\n\nexport function cdnUrl(emojiStyle: EmojiStyle): string {\n  switch (emojiStyle) {\n    case EmojiStyle.TWITTER:\n      return CDN_URL_TWITTER;\n    case EmojiStyle.GOOGLE:\n      return CDN_URL_GOOGLE;\n    case EmojiStyle.FACEBOOK:\n      return CDN_URL_FACEBOOK;\n    case EmojiStyle.APPLE:\n    default:\n      return CDN_URL_APPLE;\n  }\n}\n","import * as React from 'react'\n\nimport { GetEmojiUrl } from '../components/emoji/BaseEmojiProps';\nimport {\n  setCustomEmojis,\n  emojiUrlByUnified\n} from '../dataUtils/emojiSelectors';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport {\n  CategoriesConfig,\n  baseCategoriesConfig,\n  mergeCategoriesConfig\n} from './categoryConfig';\nimport { CustomEmoji } from './customEmojiConfig';\n\nconst KNOWN_FAILING_EMOJIS = ['2640-fe0f', '2642-fe0f', '2695-fe0f'];\n\nexport const DEFAULT_SEARCH_PLACEHOLDER = 'Search';\nexport const SEARCH_RESULTS_NO_RESULTS_FOUND = 'No results found';\nexport const SEARCH_RESULTS_SUFFIX =\n  ' found. Use up and down arrow keys to navigate.';\nexport const SEARCH_RESULTS_ONE_RESULT_FOUND =\n  '1 result' + SEARCH_RESULTS_SUFFIX;\nexport const SEARCH_RESULTS_MULTIPLE_RESULTS_FOUND =\n  '%n results' + SEARCH_RESULTS_SUFFIX;\n\nexport function mergeConfig(\n  userConfig: PickerConfig = {}\n): PickerConfigInternal {\n  const base = basePickerConfig();\n\n  const previewConfig = Object.assign(\n    base.previewConfig,\n    userConfig.previewConfig ?? {}\n  );\n  const config = Object.assign(base, userConfig);\n\n  const categories = mergeCategoriesConfig(userConfig.categories, {\n    suggestionMode: config.suggestedEmojisMode\n  });\n\n  setCustomEmojis(config.customEmojis ?? []);\n\n  const skinTonePickerLocation = config.searchDisabled\n    ? SkinTonePickerLocation.PREVIEW\n    : config.skinTonePickerLocation;\n\n  return {\n    ...config,\n    categories,\n    previewConfig,\n    skinTonePickerLocation\n  };\n}\n\nexport function basePickerConfig(): PickerConfigInternal {\n  return {\n    autoFocusSearch: true,\n    categories: baseCategoriesConfig(),\n    className: '',\n    customEmojis: [],\n    defaultSkinTone: SkinTones.NEUTRAL,\n    emojiStyle: EmojiStyle.APPLE,\n    emojiVersion: null,\n    getEmojiUrl: emojiUrlByUnified,\n    height: 450,\n    lazyLoadEmojis: false,\n    previewConfig: {\n      ...basePreviewConfig\n    },\n    searchDisabled: false,\n    searchPlaceHolder: DEFAULT_SEARCH_PLACEHOLDER,\n    searchPlaceholder: DEFAULT_SEARCH_PLACEHOLDER,\n    skinTonePickerLocation: SkinTonePickerLocation.SEARCH,\n    skinTonesDisabled: false,\n    style: {},\n    suggestedEmojisMode: SuggestionMode.FREQUENT,\n    theme: Theme.LIGHT,\n    unicodeToHide: new Set<string>(KNOWN_FAILING_EMOJIS),\n    width: 350\n  };\n}\n\nexport type PickerConfigInternal = {\n  emojiVersion: string | null;\n  searchPlaceHolder: string;\n  searchPlaceholder: string;\n  defaultSkinTone: SkinTones;\n  skinTonesDisabled: boolean;\n  autoFocusSearch: boolean;\n  emojiStyle: EmojiStyle;\n  categories: CategoriesConfig;\n  theme: Theme;\n  suggestedEmojisMode: SuggestionMode;\n  lazyLoadEmojis: boolean;\n  previewConfig: PreviewConfig;\n  className: string;\n  height: PickerDimensions;\n  width: PickerDimensions;\n  style: React.CSSProperties;\n  getEmojiUrl: GetEmojiUrl;\n  searchDisabled: boolean;\n  skinTonePickerLocation: SkinTonePickerLocation;\n  unicodeToHide: Set<string>;\n  customEmojis: CustomEmoji[];\n};\n\nexport type PreviewConfig = {\n  defaultEmoji: string;\n  defaultCaption: string;\n  showPreview: boolean;\n};\n\nconst basePreviewConfig: PreviewConfig = {\n  defaultEmoji: '1f60a',\n  defaultCaption: \"What's your mood?\",\n  showPreview: true\n};\n\ntype ConfigExternal = {\n  previewConfig: Partial<PreviewConfig>;\n  onEmojiClick: (emoji: EmojiClickData, event: MouseEvent) => void;\n} & Omit<PickerConfigInternal, 'previewConfig' | 'unicodeToHide'>;\n\nexport type PickerConfig = Partial<ConfigExternal>;\n\nexport type PickerDimensions = string | number;\n","import * as React from 'react';\n\nimport {\n  basePickerConfig,\n  mergeConfig,\n  PickerConfig,\n  PickerConfigInternal\n} from '../../config/config';\n\ntype Props = PickerConfig &\n  Readonly<{\n    children: React.ReactNode;\n  }>;\n\nconst ConfigContext = React.createContext<PickerConfigInternal>(\n  basePickerConfig()\n);\n\nexport function PickerConfigProvider({ children, ...config }: Props) {\n  const mergedConfig = useSetConfig(config);\n\n  return (\n    <ConfigContext.Provider value={mergedConfig}>\n      {children}\n    </ConfigContext.Provider>\n  );\n}\n\nexport function useSetConfig(config: PickerConfig) {\n  const [mergedConfig, setMergedConfig] = React.useState(() =>\n    mergeConfig(config)\n  );\n\n  React.useEffect(() => {\n    if (config.customEmojis?.length !== mergedConfig.customEmojis?.length) {\n      setMergedConfig(mergeConfig(config));\n    }\n    // not gonna...\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [config.customEmojis?.length]);\n\n  return mergedConfig;\n}\n\nexport function usePickerConfig() {\n  return React.useContext(ConfigContext);\n}\n","import React from 'react';\n\nimport { EmojiClickData } from '../types/exposedTypes';\n\nexport type MutableConfig = {\n  onEmojiClick?: (emoji: EmojiClickData, event: MouseEvent) => void;\n};\n\nexport const MutableConfigContext = React.createContext<\n  React.MutableRefObject<MutableConfig>\n>({} as React.MutableRefObject<MutableConfig>);\n\nexport function useMutableConfig(): React.MutableRefObject<MutableConfig> {\n  const mutableConfig = React.useContext(MutableConfigContext);\n  return mutableConfig;\n}\n\nexport function useDefineMutableConfig(\n  config: MutableConfig\n): React.MutableRefObject<MutableConfig> {\n  const MutableConfigRef = React.useRef<MutableConfig>({\n    onEmojiClick: config.onEmojiClick || emptyFunc\n  });\n\n  React.useEffect(() => {\n    MutableConfigRef.current.onEmojiClick = config.onEmojiClick || emptyFunc;\n  }, [config.onEmojiClick]);\n\n  return MutableConfigRef;\n}\n\nfunction emptyFunc() {}\n","import * as React from 'react';\n\nimport { usePickerConfig } from '../components/context/PickerConfigContext';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport { CategoriesConfig } from './categoryConfig';\nimport {\n  DEFAULT_SEARCH_PLACEHOLDER,\n  SEARCH_RESULTS_NO_RESULTS_FOUND,\n  SEARCH_RESULTS_ONE_RESULT_FOUND,\n  SEARCH_RESULTS_MULTIPLE_RESULTS_FOUND,\n  PickerDimensions,\n  PreviewConfig\n} from './config';\nimport { CustomEmoji } from './customEmojiConfig';\nimport { useMutableConfig } from './mutableConfig';\n\nexport function useSearchPlaceHolderConfig(): string {\n  const { searchPlaceHolder, searchPlaceholder } = usePickerConfig();\n  return (\n    [searchPlaceHolder, searchPlaceholder].find(\n      p => p !== DEFAULT_SEARCH_PLACEHOLDER\n    ) ?? DEFAULT_SEARCH_PLACEHOLDER\n  );\n}\n\nexport function useDefaultSkinToneConfig(): SkinTones {\n  const { defaultSkinTone } = usePickerConfig();\n  return defaultSkinTone;\n}\n\nexport function useSkinTonesDisabledConfig(): boolean {\n  const { skinTonesDisabled } = usePickerConfig();\n  return skinTonesDisabled;\n}\n\nexport function useEmojiStyleConfig(): EmojiStyle {\n  const { emojiStyle } = usePickerConfig();\n  return emojiStyle;\n}\n\nexport function useAutoFocusSearchConfig(): boolean {\n  const { autoFocusSearch } = usePickerConfig();\n  return autoFocusSearch;\n}\n\nexport function useCategoriesConfig(): CategoriesConfig {\n  const { categories } = usePickerConfig();\n  return categories;\n}\n\nexport function useCustomEmojisConfig(): CustomEmoji[] {\n  const { customEmojis } = usePickerConfig();\n  return customEmojis;\n}\n\nexport function useOnEmojiClickConfig(): (\n  emoji: EmojiClickData,\n  event: MouseEvent\n) => void {\n  const { current } = useMutableConfig();\n  return current.onEmojiClick || (() => {});\n}\n\nexport function usePreviewConfig(): PreviewConfig {\n  const { previewConfig } = usePickerConfig();\n  return previewConfig;\n}\n\nexport function useThemeConfig(): Theme {\n  const { theme } = usePickerConfig();\n\n  return theme;\n}\n\nexport function useSuggestedEmojisModeConfig(): SuggestionMode {\n  const { suggestedEmojisMode } = usePickerConfig();\n  return suggestedEmojisMode;\n}\n\nexport function useLazyLoadEmojisConfig(): boolean {\n  const { lazyLoadEmojis } = usePickerConfig();\n  return lazyLoadEmojis;\n}\n\nexport function useClassNameConfig(): string {\n  const { className } = usePickerConfig();\n  return className;\n}\n\nexport function useStyleConfig(): React.CSSProperties {\n  const { height, width, style } = usePickerConfig();\n  return { height: getDimension(height), width: getDimension(width), ...style };\n}\n\nexport function useEmojiVersionConfig(): string | null {\n  const { emojiVersion } = usePickerConfig();\n  return emojiVersion;\n}\n\nexport function useSearchDisabledConfig(): boolean {\n  const { searchDisabled } = usePickerConfig();\n  return searchDisabled;\n}\n\nexport function useSkinTonePickerLocationConfig(): SkinTonePickerLocation {\n  const { skinTonePickerLocation } = usePickerConfig();\n  return skinTonePickerLocation;\n}\n\nexport function useUnicodeToHide() {\n  const { unicodeToHide } = usePickerConfig();\n  return unicodeToHide;\n}\n\nexport function useGetEmojiUrlConfig(): (\n  unified: string,\n  style: EmojiStyle\n) => string {\n  const { getEmojiUrl } = usePickerConfig();\n  return getEmojiUrl;\n}\n\nfunction getDimension(dimensionConfig: PickerDimensions): PickerDimensions {\n  return typeof dimensionConfig === 'number'\n    ? `${dimensionConfig}px`\n    : dimensionConfig;\n}\n\nexport function useSearchResultsConfig(searchResultsCount: number): string {\n  const hasResults = searchResultsCount > 0;\n  const isPlural = searchResultsCount > 1;\n\n  if (hasResults) {\n    return isPlural ?\n      SEARCH_RESULTS_MULTIPLE_RESULTS_FOUND.replace('%n', searchResultsCount.toString())\n        : SEARCH_RESULTS_ONE_RESULT_FOUND;\n  }\n\n  return SEARCH_RESULTS_NO_RESULTS_FOUND;\n}\n","import { useRef, useState } from 'react';\n\nexport function useDebouncedState<T>(\n  initialValue: T,\n  delay: number = 0\n): [T, (value: T) => Promise<T>] {\n  const [state, setState] = useState<T>(initialValue);\n  const timer = useRef<number | null>(null);\n\n  function debouncedSetState(value: T) {\n    return new Promise<T>(resolve => {\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n\n      timer.current = window?.setTimeout(() => {\n        setState(value);\n        resolve(value);\n      }, delay);\n    });\n  }\n\n  return [state, debouncedSetState];\n}\n","import { useRef, useMemo } from 'react';\n\nimport { useEmojiVersionConfig } from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  addedIn,\n  allEmojis,\n  emojiUnified,\n  unifiedWithoutSkinTone\n} from '../dataUtils/emojiSelectors';\n\nimport { useIsUnicodeHidden } from './useHideEmojisByUniocode';\n\nexport function useDisallowedEmojis() {\n  const DisallowedEmojisRef = useRef<Record<string, boolean>>({});\n  const emojiVersionConfig = useEmojiVersionConfig();\n\n  return useMemo(() => {\n    const emojiVersion = parseFloat(`${emojiVersionConfig}`);\n\n    if (!emojiVersionConfig || Number.isNaN(emojiVersion)) {\n      return DisallowedEmojisRef.current;\n    }\n\n    return allEmojis.reduce((disallowedEmojis, emoji) => {\n      if (addedInNewerVersion(emoji, emojiVersion)) {\n        disallowedEmojis[emojiUnified(emoji)] = true;\n      }\n\n      return disallowedEmojis;\n    }, DisallowedEmojisRef.current);\n  }, [emojiVersionConfig]);\n}\n\nexport function useIsEmojiDisallowed() {\n  const disallowedEmojis = useDisallowedEmojis();\n  const isUnicodeHidden = useIsUnicodeHidden();\n\n  return function isEmojiDisallowed(emoji: DataEmoji) {\n    const unified = unifiedWithoutSkinTone(emojiUnified(emoji));\n\n    return Boolean(disallowedEmojis[unified] || isUnicodeHidden(unified));\n  };\n}\n\nfunction addedInNewerVersion(\n  emoji: DataEmoji,\n  supportedLevel: number\n): boolean {\n  return addedIn(emoji) > supportedLevel;\n}\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport { useDefaultSkinToneConfig } from '../../config/useConfig';\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport { alphaNumericEmojiIndex } from '../../dataUtils/alphaNumericEmojiIndex';\nimport { useDebouncedState } from '../../hooks/useDebouncedState';\nimport { useDisallowedEmojis } from '../../hooks/useDisallowedEmojis';\nimport { FilterDict } from '../../hooks/useFilter';\nimport { useMarkInitialLoad } from '../../hooks/useInitialLoad';\nimport { SkinTones } from '../../types/exposedTypes';\n\nexport function PickerContextProvider({ children }: Props) {\n  const disallowedEmojis = useDisallowedEmojis();\n  const defaultSkinTone = useDefaultSkinToneConfig();\n\n  // Initialize the filter with the inititial dictionary\n  const filterRef = React.useRef<FilterState>(alphaNumericEmojiIndex);\n  const disallowClickRef = React.useRef<boolean>(false);\n  const disallowMouseRef = React.useRef<boolean>(false);\n  const disallowedEmojisRef = React.useRef<Record<string, boolean>>(\n    disallowedEmojis\n  );\n\n  const suggestedUpdateState = useDebouncedState(Date.now(), 200);\n  const searchTerm = useDebouncedState('', 100);\n  const skinToneFanOpenState = useState<boolean>(false);\n  const activeSkinTone = useState<SkinTones>(defaultSkinTone);\n  const activeCategoryState = useState<ActiveCategoryState>(null);\n  const emojisThatFailedToLoadState = useState<Set<string>>(new Set());\n  const emojiVariationPickerState = useState<DataEmoji | null>(null);\n  const [isPastInitialLoad, setIsPastInitialLoad] = useState(false);\n\n  useMarkInitialLoad(setIsPastInitialLoad);\n\n  return (\n    <PickerContext.Provider\n      value={{\n        activeCategoryState,\n        activeSkinTone,\n        disallowClickRef,\n        disallowMouseRef,\n        disallowedEmojisRef,\n        emojiVariationPickerState,\n        emojisThatFailedToLoadState,\n        filterRef,\n        isPastInitialLoad,\n        searchTerm,\n        skinToneFanOpenState,\n        suggestedUpdateState\n      }}\n    >\n      {children}\n    </PickerContext.Provider>\n  );\n}\n\ntype ReactState<T> = [T, React.Dispatch<React.SetStateAction<T>>];\n\nconst PickerContext = React.createContext<{\n  searchTerm: [string, (term: string) => Promise<string>];\n  suggestedUpdateState: [number, (term: number) => void];\n  activeCategoryState: ReactState<ActiveCategoryState>;\n  activeSkinTone: ReactState<SkinTones>;\n  emojisThatFailedToLoadState: ReactState<Set<string>>;\n  isPastInitialLoad: boolean;\n  emojiVariationPickerState: ReactState<DataEmoji | null>;\n  skinToneFanOpenState: ReactState<boolean>;\n  filterRef: React.MutableRefObject<FilterState>;\n  disallowClickRef: React.MutableRefObject<boolean>;\n  disallowMouseRef: React.MutableRefObject<boolean>;\n  disallowedEmojisRef: React.MutableRefObject<Record<string, boolean>>;\n}>({\n  activeCategoryState: [null, () => {}],\n  activeSkinTone: [SkinTones.NEUTRAL, () => {}],\n  disallowClickRef: { current: false },\n  disallowMouseRef: { current: false },\n  disallowedEmojisRef: { current: {} },\n  emojiVariationPickerState: [null, () => {}],\n  emojisThatFailedToLoadState: [new Set(), () => {}],\n  filterRef: { current: {} },\n  isPastInitialLoad: true,\n  searchTerm: ['', () => new Promise<string>(() => undefined)],\n  skinToneFanOpenState: [false, () => {}],\n  suggestedUpdateState: [Date.now(), () => {}]\n});\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport function useFilterRef() {\n  const { filterRef } = React.useContext(PickerContext);\n  return filterRef;\n}\n\nexport function useDisallowClickRef() {\n  const { disallowClickRef } = React.useContext(PickerContext);\n  return disallowClickRef;\n}\n\nexport function useDisallowMouseRef() {\n  const { disallowMouseRef } = React.useContext(PickerContext);\n  return disallowMouseRef;\n}\n\nexport function useSearchTermState() {\n  const { searchTerm } = React.useContext(PickerContext);\n  return searchTerm;\n}\n\nexport function useActiveSkinToneState(): [\n  SkinTones,\n  (skinTone: SkinTones) => void\n] {\n  const { activeSkinTone } = React.useContext(PickerContext);\n  return activeSkinTone;\n}\n\nexport function useEmojisThatFailedToLoadState() {\n  const { emojisThatFailedToLoadState } = React.useContext(PickerContext);\n  return emojisThatFailedToLoadState;\n}\n\nexport function useIsPastInitialLoad(): boolean {\n  const { isPastInitialLoad } = React.useContext(PickerContext);\n  return isPastInitialLoad;\n}\n\nexport function useEmojiVariationPickerState() {\n  const { emojiVariationPickerState } = React.useContext(PickerContext);\n  return emojiVariationPickerState;\n}\n\nexport function useSkinToneFanOpenState() {\n  const { skinToneFanOpenState } = React.useContext(PickerContext);\n  return skinToneFanOpenState;\n}\n\nexport function useDisallowedEmojisRef() {\n  const { disallowedEmojisRef } = React.useContext(PickerContext);\n  return disallowedEmojisRef;\n}\n\nexport function useUpdateSuggested(): [number, () => void] {\n  const { suggestedUpdateState } = React.useContext(PickerContext);\n\n  const [suggestedUpdated, setsuggestedUpdate] = suggestedUpdateState;\n  return [\n    suggestedUpdated,\n    function updateSuggested() {\n      setsuggestedUpdate(Date.now());\n    }\n  ];\n}\n\nexport type FilterState = Record<string, FilterDict>;\n\ntype ActiveCategoryState = null | string;\n","import { useEffect } from 'react';\nimport * as React from 'react';\n\nexport function useMarkInitialLoad(\n  dispatch: React.Dispatch<React.SetStateAction<boolean>>\n) {\n  useEffect(() => {\n    dispatch(true);\n  }, [dispatch]);\n}\n","import { useEffect } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useDisallowMouseRef } from '../components/context/PickerContext';\n\nexport function useDisallowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function disallowMouseMove() {\n    DisallowMouseRef.current = true;\n  };\n}\n\nexport function useAllowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function allowMouseMove() {\n    DisallowMouseRef.current = false;\n  };\n}\n\nexport function useIsMouseDisallowed() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function isMouseDisallowed() {\n    return DisallowMouseRef.current;\n  };\n}\n\nexport function useOnMouseMove() {\n  const BodyRef = useBodyRef();\n  const allowMouseMove = useAllowMouseMove();\n  const isMouseDisallowed = useIsMouseDisallowed();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    bodyRef?.addEventListener('mousemove', onMouseMove, {\n      passive: true\n    });\n\n    function onMouseMove() {\n      if (isMouseDisallowed()) {\n        allowMouseMove();\n      }\n    }\n    return () => {\n      bodyRef?.removeEventListener('mousemove', onMouseMove);\n    };\n  }, [BodyRef, allowMouseMove, isMouseDisallowed]);\n}\n","import { NullableElement } from './selectors';\n\nexport function elementCountInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const parentWidth = parent.getBoundingClientRect().width;\n  const elementWidth = element.getBoundingClientRect().width;\n  return Math.floor(parentWidth / elementWidth);\n}\n\nexport function elementIndexInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementWidth = element.getBoundingClientRect().width;\n  const elementLeft = element.getBoundingClientRect().left;\n  const parentLeft = parent.getBoundingClientRect().left;\n\n  return Math.floor((elementLeft - parentLeft) / elementWidth);\n}\n\nexport function rowNumber(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  return Math.round((elementTop - parentTop) / elementHeight);\n}\n\nexport function hasNextRow(\n  parent: NullableElement,\n  element: NullableElement\n): boolean {\n  if (!parent || !element) {\n    return false;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentHeight = parent.getBoundingClientRect().height;\n\n  return Math.round(elementTop - parentTop + elementHeight) < parentHeight;\n}\n\nfunction getRowElements(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number\n): HTMLElement[] {\n  if (row === -1) {\n    const lastRow = Math.floor((elements.length - 1) / elementsInRow);\n    const firstElementIndex = lastRow * elementsInRow;\n    const lastElementIndex = elements.length - 1;\n    return elements.slice(firstElementIndex, lastElementIndex + 1);\n  }\n\n  return elements.slice(row * elementsInRow, (row + 1) * elementsInRow);\n}\n\nfunction getNextRowElements(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number\n): HTMLElement[] {\n  const nextRow = currentRow + 1;\n\n  if (nextRow * elementsInRow > allElements.length) {\n    return [];\n  }\n\n  return getRowElements(allElements, nextRow, elementsInRow);\n}\n\nexport function getElementInRow(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number,\n  indexInRow: number\n): NullableElement {\n  const rowElements = getRowElements(elements, row, elementsInRow);\n  // get element, default to last\n  return rowElements[indexInRow] || rowElements[rowElements.length - 1] || null;\n}\n\nexport function getElementInNextRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const nextRowElements = getNextRowElements(\n    allElements,\n    currentRow,\n    elementsInRow\n  );\n\n  // return item in index, or last item in row\n  return (\n    nextRowElements[index] ||\n    nextRowElements[nextRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function getElementInPrevRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const prevRowElements = getRowElements(\n    allElements,\n    currentRow - 1,\n    elementsInRow\n  );\n\n  // default to last\n  return (\n    prevRowElements[index] ||\n    prevRowElements[prevRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function firstVisibleElementInContainer(\n  parent: NullableElement,\n  elements: HTMLElement[]\n): NullableElement {\n  if (!parent || !elements.length) {\n    return null;\n  }\n\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentBottom = parent.getBoundingClientRect().bottom;\n\n  const visibleElements = elements.find(element => {\n    const elementTop = element.getBoundingClientRect().top;\n    const elementBottom = element.getBoundingClientRect().bottom;\n\n    return (\n      (elementTop >= parentTop && elementTop <= parentBottom) ||\n      (elementBottom >= parentTop && elementBottom <= parentBottom)\n    );\n  });\n\n  return visibleElements || null;\n}\n\nexport function hasNextElementSibling(element: HTMLElement) {\n  return !!element.nextElementSibling;\n}\n","import { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  emojiByUnified,\n  unifiedWithoutSkinTone\n} from '../dataUtils/emojiSelectors';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport { firstVisibleElementInContainer } from './elementPositionInRow';\n\nexport type NullableElement = HTMLElement | null;\n\nexport const EmojiButtonSelector = `button${asSelectors(ClassNames.emoji)}`;\nexport const VisibleEmojiSelector = [\n  EmojiButtonSelector,\n  asSelectors(ClassNames.visible),\n  `:not(${asSelectors(ClassNames.hidden)})`\n].join('');\n\nexport function buttonFromTarget(\n  emojiElement: NullableElement\n): HTMLButtonElement | null {\n  return emojiElement?.closest(EmojiButtonSelector) ?? null;\n}\n\nexport function isEmojiButton(element: NullableElement): boolean {\n  if (!element) {\n    return false;\n  }\n\n  return element.matches(EmojiButtonSelector);\n}\n\nexport function emojiFromElement(\n  element: NullableElement\n): [DataEmoji, string] | [] {\n  const originalUnified = originalUnifiedFromEmojiElement(element);\n  const unified = unifiedFromEmojiElement(element);\n\n  if (!originalUnified) {\n    return [];\n  }\n\n  const emoji = emojiByUnified(unified ?? originalUnified);\n\n  if (!emoji) {\n    return [];\n  }\n\n  return [emoji, unified as string];\n}\n\nexport function isEmojiElement(element: NullableElement): boolean {\n  return Boolean(\n    element?.matches(EmojiButtonSelector) ||\n      element?.parentElement?.matches(EmojiButtonSelector)\n  );\n}\n\nexport function categoryLabelFromCategory(\n  category: NullableElement\n): NullableElement {\n  return category?.querySelector(asSelectors(ClassNames.label)) ?? null;\n}\n\nexport function closestCategoryLabel(\n  element: NullableElement\n): NullableElement {\n  const category = closestCategory(element);\n  return categoryLabelFromCategory(category);\n}\n\nexport function elementHeight(element: NullableElement): number {\n  return element?.clientHeight ?? 0;\n}\n\nexport function emojiTrueOffsetTop(element: NullableElement): number {\n  if (!element) {\n    return 0;\n  }\n\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  // compensate for the label height\n  const labelHeight = categoryLabelHeight(category);\n\n  return elementOffsetTop(button) + elementOffsetTop(category) + labelHeight;\n}\n\nexport function categoryLabelHeight(category: NullableElement): number {\n  if (!category) {\n    return 0;\n  }\n\n  const categoryWithoutLabel = category.querySelector(\n    asSelectors(ClassNames.categoryContent)\n  );\n\n  return (\n    (category?.clientHeight ?? 0) - (categoryWithoutLabel?.clientHeight ?? 0)\n  );\n}\n\nexport function isEmojiBehindLabel(emoji: NullableElement): boolean {\n  if (!emoji) {\n    return false;\n  }\n\n  return (\n    emojiDistanceFromScrollTop(emoji) <\n    categoryLabelHeight(closestCategory(emoji))\n  );\n}\n\nexport function queryScrollBody(root: NullableElement): NullableElement {\n  if (!root) return null;\n\n  return root.matches(asSelectors(ClassNames.scrollBody))\n    ? root\n    : root.querySelector(asSelectors(ClassNames.scrollBody));\n}\n\nexport function emojiDistanceFromScrollTop(emoji: NullableElement): number {\n  if (!emoji) {\n    return 0;\n  }\n\n  return emojiTrueOffsetTop(emoji) - (closestScrollBody(emoji)?.scrollTop ?? 0);\n}\n\nexport function closestScrollBody(element: NullableElement): NullableElement {\n  if (!element) {\n    return null;\n  }\n\n  return element.closest(asSelectors(ClassNames.scrollBody)) ?? null;\n}\n\nexport function emojiTruOffsetLeft(element: NullableElement): number {\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  return elementOffsetLeft(button) + elementOffsetLeft(category);\n}\n\nfunction elementOffsetTop(element: NullableElement): number {\n  return element?.offsetTop ?? 0;\n}\n\nfunction elementOffsetLeft(element: NullableElement): number {\n  return element?.offsetLeft ?? 0;\n}\n\nexport function unifiedFromEmojiElement(emoji: NullableElement): string | null {\n  return elementDataSetKey(buttonFromTarget(emoji), 'unified') ?? null;\n}\n\nexport function originalUnifiedFromEmojiElement(\n  emoji: NullableElement\n): string | null {\n  const unified = unifiedFromEmojiElement(emoji);\n\n  if (unified) {\n    return unifiedWithoutSkinTone(unified);\n  }\n  return null;\n}\n\nfunction elementDataSetKey(\n  element: NullableElement,\n  key: string\n): string | null {\n  return elementDataSet(element)[key] ?? null;\n}\n\nfunction elementDataSet(element: NullableElement): DOMStringMap {\n  return element?.dataset ?? {};\n}\n\nexport function isVisibleEmoji(element: HTMLElement) {\n  return element.classList.contains(ClassNames.visible);\n}\n\nexport function isHidden(element: NullableElement) {\n  if (!element) return true;\n\n  return element.classList.contains(ClassNames.hidden);\n}\n\nexport function allVisibleEmojis(parent: NullableElement) {\n  if (!parent) {\n    return [];\n  }\n\n  return Array.from(\n    parent.querySelectorAll(VisibleEmojiSelector)\n  ) as HTMLElement[];\n}\n\nexport function lastVisibleEmoji(element: NullableElement): NullableElement {\n  if (!element) return null;\n\n  const allEmojis = allVisibleEmojis(element);\n  const [last] = allEmojis.slice(-1);\n  if (!last) {\n    return null;\n  }\n\n  if (!isVisibleEmoji(last)) {\n    return prevVisibleEmoji(last);\n  }\n\n  return last;\n}\n\nexport function nextVisibleEmoji(element: HTMLElement): NullableElement {\n  const next = element.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return firstVisibleEmoji(nextCategory(element));\n  }\n\n  if (!isVisibleEmoji(next)) {\n    return nextVisibleEmoji(next);\n  }\n\n  return next;\n}\n\nexport function prevVisibleEmoji(element: HTMLElement): NullableElement {\n  const prev = element.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return lastVisibleEmoji(prevCategory(element));\n  }\n\n  if (!isVisibleEmoji(prev)) {\n    return prevVisibleEmoji(prev);\n  }\n\n  return prev;\n}\n\nexport function firstVisibleEmoji(parent: NullableElement) {\n  if (!parent) {\n    return null;\n  }\n\n  const allEmojis = allVisibleEmojis(parent);\n\n  return firstVisibleElementInContainer(parent, allEmojis);\n}\n\nexport function prevCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const prev = category.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return null;\n  }\n\n  if (isHidden(prev)) {\n    return prevCategory(prev);\n  }\n\n  return prev;\n}\n\nexport function nextCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const next = category.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return null;\n  }\n\n  if (isHidden(next)) {\n    return nextCategory(next);\n  }\n\n  return next;\n}\n\nexport function closestCategory(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(asSelectors(ClassNames.category)) as HTMLElement;\n}\n\nexport function closestCategoryContent(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(\n    asSelectors(ClassNames.categoryContent)\n  ) as HTMLElement;\n}\n","export function parseNativeEmoji(unified: string): string {\n  return unified\n    .split('-')\n    .map(hex => String.fromCodePoint(parseInt(hex, 16)))\n    .join('');\n}\n","import { SkinTones, SuggestionMode } from '../types/exposedTypes';\n\nimport { DataEmoji } from './DataTypes';\nimport { emojiUnified } from './emojiSelectors';\n\nconst SUGGESTED_LS_KEY = 'epr_suggested';\n\ntype SuggestedItem = {\n  unified: string;\n  original: string;\n  count: number;\n};\n\ntype Suggested = SuggestedItem[];\n\nexport function getSuggested(mode?: SuggestionMode): Suggested {\n  try {\n    if (!window?.localStorage) {\n      return [];\n    }\n    const recent = JSON.parse(\n      window?.localStorage.getItem(SUGGESTED_LS_KEY) ?? '[]'\n    ) as Suggested;\n\n    if (mode === SuggestionMode.FREQUENT) {\n      return recent.sort((a, b) => b.count - a.count);\n    }\n\n    return recent;\n  } catch {\n    return [];\n  }\n}\n\nexport function setSuggested(emoji: DataEmoji, skinTone: SkinTones) {\n  const recent = getSuggested();\n\n  const unified = emojiUnified(emoji, skinTone);\n  const originalUnified = emojiUnified(emoji);\n\n  let existing = recent.find(({ unified: u }) => u === unified);\n\n  let nextList: SuggestedItem[];\n\n  if (existing) {\n    nextList = [existing].concat(recent.filter(i => i !== existing));\n  } else {\n    existing = {\n      unified,\n      original: originalUnified,\n      count: 0\n    };\n    nextList = [existing, ...recent];\n  }\n\n  existing.count++;\n\n  nextList.length = Math.min(nextList.length, 14);\n\n  try {\n    window?.localStorage.setItem(SUGGESTED_LS_KEY, JSON.stringify(nextList));\n    // Prevents the change from being seen immediately.\n  } catch {\n    // ignore\n  }\n}\n","import {\n  Categories,\n  CategoryConfig,\n  CustomCategoryConfig\n} from '../config/categoryConfig';\nimport { CustomEmoji } from '../config/customEmojiConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\n\nexport function isCustomCategory(\n  category: CategoryConfig | CustomCategoryConfig\n): category is CustomCategoryConfig {\n  return category.category === Categories.CUSTOM;\n}\n\nexport function isCustomEmoji(emoji: Partial<DataEmoji>): emoji is CustomEmoji {\n  return emoji.imgUrl !== undefined;\n}\n","import { useCallback } from 'react';\n\nimport {\n  useEmojiVariationPickerState,\n  useSkinToneFanOpenState\n} from '../components/context/PickerContext';\n\nexport function useCloseAllOpenToggles() {\n  const [variationPicker, setVariationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen, setSkinToneFanOpen] = useSkinToneFanOpenState();\n\n  const closeAllOpenToggles = useCallback(() => {\n    if (variationPicker) {\n      setVariationPicker(null);\n    }\n\n    if (skinToneFanOpen) {\n      setSkinToneFanOpen(false);\n    }\n  }, [\n    variationPicker,\n    skinToneFanOpen,\n    setVariationPicker,\n    setSkinToneFanOpen\n  ]);\n\n  return closeAllOpenToggles;\n}\n\nexport function useHasOpenToggles() {\n  const [variationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen] = useSkinToneFanOpenState();\n\n  return function hasOpenToggles() {\n    return !!variationPicker || skinToneFanOpen;\n  };\n}\n","import { emojiFromElement, NullableElement } from '../DomUtils/selectors';\nimport { useSetAnchoredEmojiRef } from '../components/context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../components/context/PickerContext';\n\nexport default function useSetVariationPicker() {\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n\n  return function setVariationPicker(element: NullableElement) {\n    const [emoji] = emojiFromElement(element);\n\n    if (emoji) {\n      setAnchoredEmojiRef(element);\n      setEmojiVariationPicker(emoji);\n    }\n  };\n}\n","import * as React from 'react';\nimport { useEffect, useRef } from 'react';\n\nimport {\n  emojiFromElement,\n  isEmojiElement,\n  NullableElement\n} from '../DomUtils/selectors';\nimport {\n  useActiveSkinToneState,\n  useDisallowClickRef,\n  useEmojiVariationPickerState,\n  useUpdateSuggested\n} from '../components/context/PickerContext';\nimport { GetEmojiUrl } from '../components/emoji/BaseEmojiProps';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useOnEmojiClickConfig\n} from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  activeVariationFromUnified,\n  emojiHasVariations,\n  emojiNames,\n  emojiUnified\n} from '../dataUtils/emojiSelectors';\nimport { parseNativeEmoji } from '../dataUtils/parseNativeEmoji';\nimport { setSuggested } from '../dataUtils/suggested';\nimport { isCustomEmoji } from '../typeRefinements/typeRefinements';\nimport { EmojiClickData, SkinTones, EmojiStyle } from '../types/exposedTypes';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\nimport useSetVariationPicker from './useSetVariationPicker';\n\nexport function useMouseDownHandlers(\n  BodyRef: React.MutableRefObject<NullableElement>\n) {\n  const mouseDownTimerRef = useRef<undefined | number>();\n  const setVariationPicker = useSetVariationPicker();\n  const disallowClickRef = useDisallowClickRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const onEmojiClick = useOnEmojiClickConfig();\n  const [, updateSuggested] = useUpdateSuggested();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const activeEmojiStyle = useEmojiStyleConfig();\n\n  const onClick = React.useCallback(\n    function onClick(event: MouseEvent) {\n      if (disallowClickRef.current) {\n        return;\n      }\n\n      closeAllOpenToggles();\n\n      const [emoji, unified] = emojiFromEvent(event);\n\n      if (!emoji || !unified) {\n        return;\n      }\n\n      const skinToneToUse =\n        activeVariationFromUnified(unified) || activeSkinTone;\n\n      updateSuggested();\n      setSuggested(emoji, skinToneToUse);\n      onEmojiClick(\n        emojiClickOutput(emoji, skinToneToUse, activeEmojiStyle, getEmojiUrl),\n        event\n      );\n    },\n    [\n      activeSkinTone,\n      closeAllOpenToggles,\n      disallowClickRef,\n      onEmojiClick,\n      updateSuggested,\n      getEmojiUrl,\n      activeEmojiStyle\n    ]\n  );\n\n  const onMouseDown = React.useCallback(\n    function onMouseDown(event: MouseEvent) {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n      }\n\n      const [emoji] = emojiFromEvent(event);\n\n      if (!emoji || !emojiHasVariations(emoji)) {\n        return;\n      }\n\n      mouseDownTimerRef.current = window?.setTimeout(() => {\n        disallowClickRef.current = true;\n        mouseDownTimerRef.current = undefined;\n        closeAllOpenToggles();\n        setVariationPicker(event.target as HTMLElement);\n        setEmojiVariationPicker(emoji);\n      }, 500);\n    },\n    [\n      disallowClickRef,\n      closeAllOpenToggles,\n      setVariationPicker,\n      setEmojiVariationPicker\n    ]\n  );\n  const onMouseUp = React.useCallback(\n    function onMouseUp() {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n        mouseDownTimerRef.current = undefined;\n      } else if (disallowClickRef.current) {\n        // The problem we're trying to overcome here\n        // is that the emoji has both mouseup and click events\n        // and when releasing a mouseup event\n        // the click gets triggered too\n        // So we're disallowing the click event for a short time\n\n        requestAnimationFrame(() => {\n          disallowClickRef.current = false;\n        });\n      }\n    },\n    [disallowClickRef]\n  );\n\n  useEffect(() => {\n    if (!BodyRef.current) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n    bodyRef.addEventListener('click', onClick, {\n      passive: true\n    });\n\n    bodyRef.addEventListener('mousedown', onMouseDown, {\n      passive: true\n    });\n    bodyRef.addEventListener('mouseup', onMouseUp, {\n      passive: true\n    });\n\n    return () => {\n      bodyRef?.removeEventListener('click', onClick);\n      bodyRef?.removeEventListener('mousedown', onMouseDown);\n      bodyRef?.removeEventListener('mouseup', onMouseUp);\n    };\n  }, [BodyRef, onClick, onMouseDown, onMouseUp]);\n}\n\nfunction emojiFromEvent(event: MouseEvent): [DataEmoji, string] | [] {\n  const target = event?.target as HTMLElement;\n  if (!isEmojiElement(target)) {\n    return [];\n  }\n\n  return emojiFromElement(target);\n}\n\nfunction emojiClickOutput(\n  emoji: DataEmoji,\n  activeSkinTone: SkinTones,\n  activeEmojiStyle: EmojiStyle,\n  getEmojiUrl: GetEmojiUrl\n): EmojiClickData {\n  const names = emojiNames(emoji);\n\n  if (isCustomEmoji(emoji)) {\n    const unified = emojiUnified(emoji);\n    return {\n      activeSkinTone,\n      emoji: unified,\n      getImageUrl() {\n        return emoji.imgUrl;\n      },\n      imageUrl: emoji.imgUrl,\n      isCustom: true,\n      names,\n      unified,\n      unifiedWithoutSkinTone: unified\n    };\n  }\n  const unified = emojiUnified(emoji, activeSkinTone);\n\n  return {\n    activeSkinTone,\n    emoji: parseNativeEmoji(unified),\n    getImageUrl(emojiStyle: EmojiStyle = activeEmojiStyle ?? EmojiStyle.APPLE) {\n      return getEmojiUrl(unified, emojiStyle);\n    },\n    imageUrl: getEmojiUrl(unified, activeEmojiStyle ?? EmojiStyle.APPLE),\n    isCustom: false,\n    names,\n    unified,\n    unifiedWithoutSkinTone: emojiUnified(emoji)\n  };\n}\n","import { useCallback } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport {\n  categoryLabelHeight,\n  closestCategory,\n  closestScrollBody,\n  emojiDistanceFromScrollTop,\n  isEmojiBehindLabel,\n  NullableElement,\n  queryScrollBody\n} from './selectors';\n\nexport function scrollTo(root: NullableElement, top: number = 0) {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = top + 1;\n  });\n}\n\nexport function scrollBy(root: NullableElement, by: number): void {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = $eprBody.scrollTop + by;\n  });\n}\n\nexport function useScrollTo() {\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    (top: number) => {\n      requestAnimationFrame(() => {\n        if (BodyRef.current) {\n          BodyRef.current.scrollTop = top;\n        }\n      });\n    },\n    [BodyRef]\n  );\n}\n\nexport function scrollEmojiAboveLabel(emoji: NullableElement) {\n  if (!emoji || !isEmojiBehindLabel(emoji)) {\n    return;\n  }\n\n  if (emoji.closest(asSelectors(ClassNames.variationPicker))) {\n    return;\n  }\n\n  const scrollBody = closestScrollBody(emoji);\n  const by = emojiDistanceFromScrollTop(emoji);\n  scrollBy(scrollBody, -(categoryLabelHeight(closestCategory(emoji)) - by));\n}\n","import { useCallback } from 'react';\n\nimport { focusElement, focusFirstElementChild } from '../DomUtils/focusElement';\nimport {\n  useCategoryNavigationRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\n\nexport function useFocusSearchInput() {\n  const SearchInputRef = useSearchInputRef();\n\n  return useCallback(() => {\n    focusElement(SearchInputRef.current);\n  }, [SearchInputRef]);\n}\n\nexport function useFocusSkinTonePicker() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n\n  return useCallback(() => {\n    if (!SkinTonePickerRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(SkinTonePickerRef.current);\n  }, [SkinTonePickerRef]);\n}\n\nexport function useFocusCategoryNavigation() {\n  const CategoryNavigationRef = useCategoryNavigationRef();\n\n  return useCallback(() => {\n    if (!CategoryNavigationRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(CategoryNavigationRef.current);\n  }, [CategoryNavigationRef]);\n}\n","import { scrollTo } from '../DomUtils/scrollTo';\nimport {\n  usePickerMainRef,\n  useSearchInputRef\n} from '../components/context/ElementRefContext';\nimport {\n  FilterState,\n  useFilterRef,\n  useSearchTermState\n} from '../components/context/PickerContext';\nimport { useSearchResultsConfig } from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiNames } from '../dataUtils/emojiSelectors';\n\nimport { useFocusSearchInput } from './useFocus';\n\nfunction useSetFilterRef() {\n  const filterRef = useFilterRef();\n\n  return function setFilter(\n    setter: FilterState | ((current: FilterState) => FilterState)\n  ): void {\n    if (typeof setter === 'function') {\n      return setFilter(setter(filterRef.current));\n    }\n\n    filterRef.current = setter;\n  };\n}\n\nexport function useClearSearch() {\n  const applySearch = useApplySearch();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n\n  return function clearSearch() {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = '';\n    }\n\n    applySearch('');\n    focusSearchInput();\n  };\n}\n\nexport function useAppendSearch() {\n  const SearchInputRef = useSearchInputRef();\n  const applySearch = useApplySearch();\n\n  return function appendSearch(str: string) {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = `${SearchInputRef.current.value}${str}`;\n      applySearch(getNormalizedSearchTerm(SearchInputRef.current.value));\n    } else {\n      applySearch(getNormalizedSearchTerm(str));\n    }\n  };\n}\n\nexport function useFilter() {\n  const SearchInputRef = useSearchInputRef();\n  const filterRef = useFilterRef();\n  const setFilterRef = useSetFilterRef();\n  const applySearch = useApplySearch();\n\n  const [searchTerm] = useSearchTermState();\n  const statusSearchResults = getStatusSearchResults(\n    filterRef.current,\n    searchTerm\n  );\n\n  return {\n    onChange,\n    searchTerm,\n    SearchInputRef,\n    statusSearchResults\n  };\n\n  function onChange(inputValue: string) {\n    const filter = filterRef.current;\n\n    const nextValue = inputValue.toLowerCase();\n\n    if (filter?.[nextValue] || nextValue.length <= 1) {\n      return applySearch(nextValue);\n    }\n\n    const longestMatch = findLongestMatch(nextValue, filter);\n\n    if (!longestMatch) {\n      // Can we even get here?\n      // If so, we need to search among all emojis\n      return applySearch(nextValue);\n    }\n\n    setFilterRef(current =>\n      Object.assign(current, {\n        [nextValue]: filterEmojiObjectByKeyword(longestMatch, nextValue)\n      })\n    );\n    applySearch(nextValue);\n  }\n}\n\nfunction useApplySearch() {\n  const [, setSearchTerm] = useSearchTermState();\n  const PickerMainRef = usePickerMainRef();\n\n  return function applySearch(searchTerm: string) {\n    requestAnimationFrame(() => {\n      setSearchTerm(searchTerm ? searchTerm?.toLowerCase() : searchTerm).then(\n        () => {\n          scrollTo(PickerMainRef.current, 0);\n        }\n      );\n    });\n  };\n}\n\nfunction filterEmojiObjectByKeyword(\n  emojis: FilterDict,\n  keyword: string\n): FilterDict {\n  const filtered: FilterDict = {};\n\n  for (const unified in emojis) {\n    const emoji = emojis[unified];\n\n    if (hasMatch(emoji, keyword)) {\n      filtered[unified] = emoji;\n    }\n  }\n\n  return filtered;\n}\n\nfunction hasMatch(emoji: DataEmoji, keyword: string): boolean {\n  return emojiNames(emoji).some(name => name.includes(keyword));\n}\n\nexport function useIsEmojiFiltered(): (unified: string) => boolean {\n  const { current: filter } = useFilterRef();\n  const [searchTerm] = useSearchTermState();\n\n  return unified => isEmojiFilteredBySearchTerm(unified, filter, searchTerm);\n}\n\nfunction isEmojiFilteredBySearchTerm(\n  unified: string,\n  filter: FilterState,\n  searchTerm: string\n): boolean {\n  if (!filter || !searchTerm) {\n    return false;\n  }\n\n  return !filter[searchTerm]?.[unified];\n}\n\nexport type FilterDict = Record<string, DataEmoji>;\n\nfunction findLongestMatch(\n  keyword: string,\n  dict: Record<string, FilterDict> | null\n): FilterDict | null {\n  if (!dict) {\n    return null;\n  }\n\n  if (dict[keyword]) {\n    return dict[keyword];\n  }\n\n  const longestMatchingKey = Object.keys(dict)\n    .sort((a, b) => b.length - a.length)\n    .find(key => keyword.includes(key));\n\n  if (longestMatchingKey) {\n    return dict[longestMatchingKey];\n  }\n\n  return null;\n}\n\nexport function getNormalizedSearchTerm(str: string): string {\n  if (!str || typeof str !== 'string') {\n    return '';\n  }\n\n  return str.trim().toLowerCase();\n}\n\nfunction getStatusSearchResults(\n  filterState: FilterState,\n  searchTerm: string\n): string {\n  if (!filterState?.[searchTerm]) return '';\n\n  const searchResultsCount =\n    Object.entries(filterState?.[searchTerm])?.length || 0;\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useSearchResultsConfig(searchResultsCount);\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { cx } from 'flairup';\nimport * as React from 'react';\n\ninterface Props\n  extends React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {\n  className?: string;\n}\n\nexport function Button(props: Props) {\n  return (\n    <button type=\"button\" {...props} className={cx('epr-btn', props.className)}>\n      {props.children}\n    </button>\n  );\n}\n","import { cx } from 'flairup';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { Button } from '../atoms/Button';\n\nimport './Emoji.css';\n\ntype ClickableEmojiButtonProps = Readonly<{\n  hidden?: boolean;\n  showVariations?: boolean;\n  hiddenOnSearch?: boolean;\n  emojiNames: string[];\n  children: React.ReactNode;\n  hasVariations: boolean;\n  unified?: string;\n}>;\n\nexport function ClickableEmojiButton({\n  emojiNames,\n  unified,\n  hidden,\n  hiddenOnSearch,\n  showVariations = true,\n  hasVariations,\n  children\n}: ClickableEmojiButtonProps) {\n  return (\n    <Button\n      className={cx(ClassNames.emoji, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch,\n        [ClassNames.visible]: !hidden && !hiddenOnSearch,\n        [ClassNames.emojiHasVariations]: hasVariations && showVariations\n      })}\n      data-unified={unified}\n      aria-label={emojiNames[0]}\n      data-full-name={emojiNames}\n    >\n      {children}\n    </Button>\n  );\n}\n","import { cx } from 'flairup';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { EmojiStyle } from '../../types/exposedTypes';\n\nexport function EmojiImg({\n  emojiName,\n  style,\n  lazyLoad = false,\n  imgUrl,\n  onError\n}: {\n  emojiName: string;\n  emojiStyle: EmojiStyle;\n  style: React.CSSProperties;\n  lazyLoad?: boolean;\n  imgUrl: string;\n  onError: () => void;\n}) {\n  return (\n    <img\n      src={imgUrl}\n      alt={emojiName}\n      className={cx(ClassNames.external, 'epr-emoji-img')}\n      loading={lazyLoad ? 'lazy' : 'eager'}\n      onError={onError}\n      style={style}\n    />\n  );\n}\n","import { cx } from 'flairup';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { parseNativeEmoji } from '../../dataUtils/parseNativeEmoji';\n\nexport function NativeEmoji({\n  unified,\n  style\n}: {\n  unified: string;\n  style: React.CSSProperties;\n}) {\n  return (\n    <span\n      className={cx(ClassNames.external, 'epr-emoji-native')}\n      data-unified={unified}\n      style={style}\n    >\n      {parseNativeEmoji(unified)}\n    </span>\n  );\n}\n","import * as React from 'react';\n\nimport {\n  emojiByUnified,\n  emojiName,\n  emojiUrlByUnified\n} from '../../dataUtils/emojiSelectors';\nimport { isCustomEmoji } from '../../typeRefinements/typeRefinements';\nimport { EmojiStyle } from '../../types/exposedTypes';\nimport { useEmojisThatFailedToLoadState } from '../context/PickerContext';\n\nimport { BaseEmojiProps } from './BaseEmojiProps';\nimport { EmojiImg } from './EmojiImg';\nimport { NativeEmoji } from './NativeEmoji';\n\nexport function ViewOnlyEmoji({\n  emoji,\n  unified,\n  emojiStyle,\n  size,\n  lazyLoad,\n  getEmojiUrl = emojiUrlByUnified\n}: BaseEmojiProps) {\n  const [, setEmojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n\n  const style = {} as React.CSSProperties;\n  if (size) {\n    style.width = style.height = style.fontSize = `${size}px`;\n  }\n\n  const emojiToRender = emoji ? emoji : emojiByUnified(unified);\n\n  if (!emojiToRender) {\n    return null;\n  }\n\n  if (isCustomEmoji(emojiToRender)) {\n    return (\n      <EmojiImg\n        style={style}\n        emojiName={unified}\n        emojiStyle={EmojiStyle.NATIVE}\n        lazyLoad={lazyLoad}\n        imgUrl={emojiToRender.imgUrl}\n        onError={onError}\n      />\n    );\n  }\n\n  return (\n    <>\n      {emojiStyle === EmojiStyle.NATIVE ? (\n        <NativeEmoji unified={unified} style={style} />\n      ) : (\n        <EmojiImg\n          style={style}\n          emojiName={emojiName(emojiToRender)}\n          emojiStyle={emojiStyle}\n          lazyLoad={lazyLoad}\n          imgUrl={getEmojiUrl(unified, emojiStyle)}\n          onError={onError}\n        />\n      )}\n    </>\n  );\n\n  function onError() {\n    setEmojisThatFailedToLoad(prev => new Set(prev).add(unified));\n  }\n}\n","import * as React from 'react';\n\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport { emojiHasVariations, emojiNames } from '../../dataUtils/emojiSelectors';\n\nimport './Emoji.css';\nimport { BaseEmojiProps } from './BaseEmojiProps';\nimport { ClickableEmojiButton } from './ClickableEmojiButton';\nimport { ViewOnlyEmoji } from './ViewOnlyEmoji';\n\ntype ClickableEmojiProps = Readonly<\n  BaseEmojiProps & {\n    hidden?: boolean;\n    showVariations?: boolean;\n    hiddenOnSearch?: boolean;\n    emoji: DataEmoji;\n  }\n>;\n\nexport function ClickableEmoji({\n  emoji,\n  unified,\n  hidden,\n  hiddenOnSearch,\n  emojiStyle,\n  showVariations = true,\n  size,\n  lazyLoad,\n  getEmojiUrl\n}: ClickableEmojiProps) {\n  const hasVariations = emojiHasVariations(emoji);\n\n  return (\n    <ClickableEmojiButton\n      hasVariations={hasVariations}\n      showVariations={showVariations}\n      hidden={hidden}\n      hiddenOnSearch={hiddenOnSearch}\n      emojiNames={emojiNames(emoji)}\n      unified={unified}\n    >\n      <ViewOnlyEmoji\n        unified={unified}\n        emoji={emoji}\n        size={size}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoad}\n        getEmojiUrl={getEmojiUrl}\n      />\n    </ClickableEmojiButton>\n  );\n}\n","import { cx } from 'flairup';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  CategoryConfig,\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\n\nimport './EmojiCategory.css';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n  children?: React.ReactNode;\n  hidden?: boolean;\n  hiddenOnSearch?: boolean;\n}>;\n\nexport function EmojiCategory({\n  categoryConfig,\n  children,\n  hidden,\n  hiddenOnSearch\n}: Props) {\n  const category = categoryFromCategoryConfig(categoryConfig);\n  const categoryName = categoryNameFromCategoryConfig(categoryConfig);\n\n  return (\n    <li\n      className={cx(ClassNames.category, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch\n      })}\n      data-name={category}\n      aria-label={categoryName}\n    >\n      <h2 className={ClassNames.label}>{categoryName}</h2>\n      <div className={ClassNames.categoryContent}>{children}</div>\n    </li>\n  );\n}\n","import * as React from 'react';\n\nimport { CategoryConfig } from '../../config/categoryConfig';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useSuggestedEmojisModeConfig,\n} from '../../config/useConfig';\nimport { emojiByUnified } from '../../dataUtils/emojiSelectors';\nimport { getSuggested } from '../../dataUtils/suggested';\nimport { useUpdateSuggested } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n}>;\n\nexport function Suggested({ categoryConfig }: Props) {\n  const [suggestedUpdated] = useUpdateSuggested();\n  const suggestedEmojisModeConfig = useSuggestedEmojisModeConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const suggested = React.useMemo(\n    () => getSuggested(suggestedEmojisModeConfig) ?? [],\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [suggestedUpdated, suggestedEmojisModeConfig]\n  );\n  const emojiStyle = useEmojiStyleConfig();\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      hiddenOnSearch\n      hidden={suggested.length === 0}\n    >\n      {suggested.map((suggestedItem) => {\n        const emoji = emojiByUnified(suggestedItem.original);\n\n        if (!emoji) {\n          return null;\n        }\n\n        return (\n          <ClickableEmoji\n            showVariations={false}\n            unified={suggestedItem.unified}\n            emojiStyle={emojiStyle}\n            emoji={emoji}\n            key={suggestedItem.unified}\n            getEmojiUrl={getEmojiUrl}\n          />\n        );\n      })}\n    </EmojiCategory>\n  );\n}\n","import { cx } from 'flairup';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { stylesheet } from '../../Stylesheet/stylesheet';\nimport {\n  Categories,\n  CategoryConfig,\n  categoryFromCategoryConfig\n} from '../../config/categoryConfig';\nimport {\n  useCategoriesConfig,\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useLazyLoadEmojisConfig,\n  useSkinTonesDisabledConfig\n} from '../../config/useConfig';\nimport { emojisByCategory, emojiUnified } from '../../dataUtils/emojiSelectors';\nimport { useIsEmojiDisallowed } from '../../hooks/useDisallowedEmojis';\nimport { useIsEmojiHidden } from '../../hooks/useIsEmojiHidden';\nimport {\n  useActiveSkinToneState,\n  useIsPastInitialLoad\n} from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\nimport { Suggested } from './Suggested';\n\nexport function EmojiList() {\n  const categories = useCategoriesConfig();\n  const renderdCategoriesCountRef = React.useRef(0);\n\n  return (\n    <ul className={cx(styles.emojiList)}>\n      {categories.map(categoryConfig => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n\n        if (category === Categories.SUGGESTED) {\n          return <Suggested key={category} categoryConfig={categoryConfig} />;\n        }\n\n        return (\n          <RenderCategory\n            key={category}\n            category={category}\n            categoryConfig={categoryConfig}\n            renderdCategoriesCountRef={renderdCategoriesCountRef}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction RenderCategory({\n  category,\n  categoryConfig,\n  renderdCategoriesCountRef\n}: {\n  category: Categories;\n  categoryConfig: CategoryConfig;\n  renderdCategoriesCountRef: React.MutableRefObject<number>;\n}) {\n  const isEmojiHidden = useIsEmojiHidden();\n  const lazyLoadEmojis = useLazyLoadEmojisConfig();\n  const emojiStyle = useEmojiStyleConfig();\n  const isPastInitialLoad = useIsPastInitialLoad();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const isEmojiDisallowed = useIsEmojiDisallowed();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const showVariations = !useSkinTonesDisabledConfig();\n\n  // Small trick to defer the rendering of all emoji categories until the first category is visible\n  // This way the user gets to actually see something and not wait for the whole picker to render.\n  const emojisToPush =\n    !isPastInitialLoad && renderdCategoriesCountRef.current > 0\n      ? []\n      : emojisByCategory(category);\n\n  if (emojisToPush.length > 0) {\n    renderdCategoriesCountRef.current++;\n  }\n\n  let hiddenCounter = 0;\n\n  const emojis = emojisToPush.map(emoji => {\n    const unified = emojiUnified(emoji, activeSkinTone);\n    const { failedToLoad, filteredOut, hidden } = isEmojiHidden(emoji);\n\n    const isDisallowed = isEmojiDisallowed(emoji);\n\n    if (hidden || isDisallowed) {\n      hiddenCounter++;\n    }\n\n    if (isDisallowed) {\n      return null;\n    }\n\n    return (\n      <ClickableEmoji\n        showVariations={showVariations}\n        key={unified}\n        emoji={emoji}\n        unified={unified}\n        hidden={failedToLoad}\n        hiddenOnSearch={filteredOut}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoadEmojis}\n        getEmojiUrl={getEmojiUrl}\n      />\n    );\n  });\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      // Indicates that there are no visible emojis\n      // Hence, the category should be hidden\n      hidden={hiddenCounter === emojis.length}\n    >\n      {emojis}\n    </EmojiCategory>\n  );\n}\n\nconst styles = stylesheet.create({\n  emojiList: {\n    '.': ClassNames.emojiList,\n    listStyle: 'none',\n    margin: '0',\n    padding: '0'\n  }\n});\n","import { useUnicodeToHide } from \"../config/useConfig\";\n\nexport function useIsUnicodeHidden() {\n    const unicodeToHide = useUnicodeToHide();\n    return (emojiUnified: string) => unicodeToHide.has(emojiUnified);\n  }\n","import { useEmojisThatFailedToLoadState } from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified } from '../dataUtils/emojiSelectors';\n\nimport { useIsEmojiFiltered } from './useFilter';\n\nexport function useIsEmojiHidden(): (emoji: DataEmoji) => IsHiddenReturn {\n  const [emojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n  const isEmojiFiltered = useIsEmojiFiltered();\n\n  return (emoji: DataEmoji): IsHiddenReturn => {\n    const unified = emojiUnified(emoji);\n\n    const failedToLoad = emojisThatFailedToLoad.has(unified);\n    const filteredOut = isEmojiFiltered(unified);\n\n    return {\n      failedToLoad,\n      filteredOut,\n      hidden: failedToLoad || filteredOut\n    };\n  };\n}\n\ntype IsHiddenReturn = {\n  failedToLoad: boolean;\n  filteredOut: boolean;\n  hidden: boolean;\n};\n","import { cx } from 'flairup';\nimport * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { focusFirstVisibleEmoji } from '../../DomUtils/keyboardNavigation';\nimport {\n  buttonFromTarget,\n  elementHeight,\n  emojiTrueOffsetTop,\n  emojiTruOffsetLeft\n} from '../../DomUtils/selectors';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig\n} from '../../config/useConfig';\nimport {\n  emojiHasVariations,\n  emojiUnified,\n  emojiVariations\n} from '../../dataUtils/emojiSelectors';\nimport {\n  useAnchoredEmojiRef,\n  useBodyRef,\n  useSetAnchoredEmojiRef,\n  useVariationPickerRef\n} from '../context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport './EmojiVariationPicker.css';\n\nenum Direction {\n  Up,\n  Down\n}\n\nexport function EmojiVariationPicker() {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const VariationPickerRef = useVariationPickerRef();\n  const [emoji] = useEmojiVariationPickerState();\n  const emojiStyle = useEmojiStyleConfig();\n\n  const { getTop, getMenuDirection } = useVariationPickerTop(\n    VariationPickerRef\n  );\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const getPointerStyle = usePointerStyle(VariationPickerRef);\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n  const visible =\n    emoji &&\n    button &&\n    emojiHasVariations(emoji) &&\n    button.classList.contains(ClassNames.emojiHasVariations);\n\n  useEffect(() => {\n    if (!visible) {\n      return;\n    }\n\n    focusFirstVisibleEmoji(VariationPickerRef.current);\n  }, [VariationPickerRef, visible, AnchoredEmojiRef]);\n\n  let top, pointerStyle;\n\n  if (!visible && AnchoredEmojiRef.current) {\n    setAnchoredEmojiRef(null);\n  } else {\n    top = getTop();\n    pointerStyle = getPointerStyle();\n  }\n\n  return (\n    <div\n      ref={VariationPickerRef}\n      className={cx(ClassNames.variationPicker, {\n        visible,\n        'pointing-up': getMenuDirection() === Direction.Down\n      })}\n      style={{ top }}\n    >\n      {visible && emoji\n        ? [emojiUnified(emoji)]\n            .concat(emojiVariations(emoji))\n            .slice(0, 6)\n            .map(unified => (\n              <ClickableEmoji\n                key={unified}\n                emoji={emoji}\n                unified={unified}\n                emojiStyle={emojiStyle}\n                showVariations={false}\n                getEmojiUrl={getEmojiUrl}\n              />\n            ))\n        : null}\n      <div className=\"epr-emoji-pointer\" style={pointerStyle} />\n    </div>\n  );\n}\n\nfunction usePointerStyle(VariationPickerRef: React.RefObject<HTMLElement>) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return function getPointerStyle() {\n    const style: React.CSSProperties = {};\n    if (!VariationPickerRef.current) {\n      return style;\n    }\n\n    if (AnchoredEmojiRef.current) {\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const offsetLeft = emojiTruOffsetLeft(button);\n\n      if (!button) {\n        return style;\n      }\n\n      // half of the button\n      style.left = offsetLeft + button?.clientWidth / 2;\n    }\n\n    return style;\n  };\n}\n\nfunction useVariationPickerTop(\n  VariationPickerRef: React.RefObject<HTMLElement>\n) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const BodyRef = useBodyRef();\n  let direction = Direction.Up;\n\n  return {\n    getMenuDirection,\n    getTop\n  };\n\n  function getMenuDirection() {\n    return direction;\n  }\n\n  function getTop() {\n    direction = Direction.Up;\n    let emojiOffsetTop = 0;\n\n    if (!VariationPickerRef.current) {\n      return 0;\n    }\n\n    const height = elementHeight(VariationPickerRef.current);\n\n    if (AnchoredEmojiRef.current) {\n      const bodyRef = BodyRef.current;\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const buttonHeight = elementHeight(button);\n\n      emojiOffsetTop = emojiTrueOffsetTop(button);\n\n      const scrollTop = bodyRef?.scrollTop ?? 0;\n\n      if (scrollTop > emojiOffsetTop - height) {\n        direction = Direction.Down;\n        emojiOffsetTop += buttonHeight + height;\n      }\n    }\n\n    return emojiOffsetTop - height;\n  }\n}\n","import {\n  elementCountInRow,\n  elementIndexInRow,\n  getElementInNextRow,\n  getElementInPrevRow,\n  getElementInRow,\n  hasNextRow,\n  rowNumber\n} from './elementPositionInRow';\nimport { focusElement } from './focusElement';\nimport { scrollEmojiAboveLabel } from './scrollTo';\nimport {\n  allVisibleEmojis,\n  closestCategory,\n  firstVisibleEmoji,\n  lastVisibleEmoji,\n  nextCategory,\n  nextVisibleEmoji,\n  NullableElement,\n  prevCategory,\n  prevVisibleEmoji,\n  closestCategoryContent\n} from './selectors';\n\nexport function focusFirstVisibleEmoji(parent: NullableElement) {\n  const emoji = firstVisibleEmoji(parent);\n  focusElement(emoji);\n  scrollEmojiAboveLabel(emoji);\n}\n\nexport function focusAndClickFirstVisibleEmoji(parent: NullableElement) {\n  const firstEmoji = firstVisibleEmoji(parent);\n\n  focusElement(firstEmoji);\n  firstEmoji?.click();\n}\n\nexport function focusLastVisibleEmoji(parent: NullableElement) {\n  focusElement(lastVisibleEmoji(parent));\n}\n\nexport function focusNextVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = nextVisibleEmoji(element);\n\n  if (!next) {\n    return focusFirstVisibleEmoji(nextCategory(element));\n  }\n\n  focusElement(next);\n  scrollEmojiAboveLabel(next);\n}\n\nexport function focusPrevVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const prev = prevVisibleEmoji(element);\n\n  if (!prev) {\n    return focusLastVisibleEmoji(prevCategory(element));\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowUp(\n  element: NullableElement,\n  exitUp: () => void\n) {\n  if (!element) {\n    return;\n  }\n\n  const prev = visibleEmojiOneRowUp(element);\n\n  if (!prev) {\n    return exitUp();\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowDown(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = visibleEmojiOneRowDown(element);\n\n  return focusElement(next);\n}\n\nfunction visibleEmojiOneRowUp(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n\n  if (row === 0) {\n    const prevVisibleCategory = prevCategory(category);\n\n    if (!prevVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(prevVisibleCategory),\n      -1, // last row\n      countInRow,\n      indexInRow\n    );\n  }\n\n  return getElementInPrevRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n}\n\nfunction visibleEmojiOneRowDown(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n  if (!hasNextRow(categoryContent, element)) {\n    const nextVisibleCategory = nextCategory(category);\n\n    if (!nextVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(nextVisibleCategory),\n      0,\n      countInRow,\n      indexInRow\n    );\n  }\n\n  const itemInNextRow = getElementInNextRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n\n  return itemInNextRow;\n}\n","import { cx } from 'flairup';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { stylesheet } from '../../Stylesheet/stylesheet';\nimport { useOnMouseMove } from '../../hooks/useDisallowMouseMove';\nimport { useMouseDownHandlers } from '../../hooks/useMouseDownHandlers';\nimport { useOnScroll } from '../../hooks/useOnScroll';\nimport { useBodyRef } from '../context/ElementRefContext';\n\nimport { EmojiList } from './EmojiList';\nimport { EmojiVariationPicker } from './EmojiVariationPicker';\n\nexport function Body() {\n  const BodyRef = useBodyRef();\n  useOnScroll(BodyRef);\n  useMouseDownHandlers(BodyRef);\n  useOnMouseMove();\n\n  return (\n    <div className={cx(styles.body)} ref={BodyRef}>\n      <EmojiVariationPicker />\n      <EmojiList />\n    </div>\n  );\n}\n\nconst styles = stylesheet.create({\n  body: {\n    '.': ClassNames.scrollBody,\n    flex: '1',\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    position: 'relative'\n  }\n});\n","import { useEffect } from 'react';\n\nimport { ElementRef } from '../components/context/ElementRefContext';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\n\nexport function useOnScroll(BodyRef: ElementRef) {\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    if (!bodyRef) {\n      return;\n    }\n\n    bodyRef.addEventListener('scroll', onScroll, {\n      passive: true\n    });\n\n    function onScroll() {\n      closeAllOpenToggles();\n    }\n\n    return () => {\n      bodyRef?.removeEventListener('scroll', onScroll);\n    };\n  }, [BodyRef, closeAllOpenToggles]);\n}\n","import { cx } from 'flairup';\nimport * as React from 'react';\n\nimport './Flex.css';\n\nexport enum FlexDirection {\n  ROW = 'FlexRow',\n  COLUMN = 'FlexColumn'\n}\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n  direction?: FlexDirection;\n}>;\n\nexport default function Flex({\n  children,\n  className,\n  style = {},\n  direction = FlexDirection.ROW\n}: Props) {\n  return (\n    <div style={{ ...style }} className={cx('Flex', className, direction)}>\n      {children}\n    </div>\n  );\n}\n","import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { useSkinTonesDisabledConfig } from '../../config/useConfig';\nimport skinToneVariations, {\n  skinTonesNamed\n} from '../../data/skinToneVariations';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport { useFocusSearchInput } from '../../hooks/useFocus';\nimport { SkinTones } from '../../types/exposedTypes';\nimport Absolute from '../Layout/Absolute';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSkinTonePickerRef } from '../context/ElementRefContext';\nimport {\n  useActiveSkinToneState,\n  useSkinToneFanOpenState\n} from '../context/PickerContext';\n\nimport './SkinTonePicker.css';\nimport { cx } from 'flairup';\n\nconst ITEM_SIZE = 28;\n\ntype Props = {\n  direction?: SkinTonePickerDirection;\n};\n\nexport function SkinTonePickerMenu() {\n  return (\n    <Relative style={{ height: ITEM_SIZE }}>\n      <Absolute style={{ bottom: 0, right: 0 }}>\n        <SkinTonePicker direction={SkinTonePickerDirection.VERTICAL} />\n      </Absolute>\n    </Relative>\n  );\n}\n\nexport function SkinTonePicker({\n  direction = SkinTonePickerDirection.HORIZONTAL\n}: Props) {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const isDisabled = useSkinTonesDisabledConfig();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const [activeSkinTone, setActiveSkinTone] = useActiveSkinToneState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const focusSearchInput = useFocusSearchInput();\n\n  if (isDisabled) {\n    return null;\n  }\n\n  const fullWidth = `${ITEM_SIZE * skinToneVariations.length}px`;\n\n  const expandedSize = isOpen ? fullWidth : ITEM_SIZE + 'px';\n\n  const vertical = direction === SkinTonePickerDirection.VERTICAL;\n\n  return (\n    <Relative\n      className={cx('epr-skin-tones', direction, {\n        [ClassNames.open]: isOpen\n      })}\n      style={\n        vertical\n          ? { flexBasis: expandedSize, height: expandedSize }\n          : { flexBasis: expandedSize }\n      }\n    >\n      <div className=\"epr-skin-tone-select\" ref={SkinTonePickerRef}>\n        {skinToneVariations.map((skinToneVariation, i) => {\n          const active = skinToneVariation === activeSkinTone;\n          return (\n            <Button\n              style={{\n                transform: cx(\n                  vertical\n                    ? `translateY(-${i * (isOpen ? ITEM_SIZE : 0)}px)`\n                    : `translateX(-${i * (isOpen ? ITEM_SIZE : 0)}px)`,\n                  isOpen && active && 'scale(1.3)'\n                )\n              }}\n              onClick={() => {\n                if (isOpen) {\n                  setActiveSkinTone(skinToneVariation);\n                  focusSearchInput();\n                } else {\n                  setIsOpen(true);\n                }\n                closeAllOpenToggles();\n              }}\n              key={skinToneVariation}\n              className={cx(`epr-tone-${skinToneVariation}`, 'epr-tone', {\n                [ClassNames.active]: active\n              })}\n              tabIndex={isOpen ? 0 : -1}\n              aria-pressed={active}\n              aria-label={`Skin tone ${\n                skinTonesNamed[skinToneVariation as SkinTones]\n              }`}\n            ></Button>\n          );\n        })}\n      </div>\n    </Relative>\n  );\n}\n\nexport enum SkinTonePickerDirection {\n  VERTICAL = ClassNames.vertical,\n  HORIZONTAL = ClassNames.horizontal\n}\n","import { useSkinTonePickerLocationConfig } from '../config/useConfig';\nimport { SkinTonePickerLocation } from '../types/exposedTypes';\n\nexport function useShouldShowSkinTonePicker() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return function shouldShowSkinTonePicker(location: SkinTonePickerLocation) {\n    return skinTonePickerLocationConfig === location;\n  };\n}\n\nexport function useIsSkinToneInSearch() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.SEARCH;\n}\n\nexport function useIsSkinToneInPreview() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.PREVIEW;\n}\n","import { cx } from 'flairup';\nimport * as React from 'react';\n\n\ntype Props = Readonly<{\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Space({ className, style = {} }: Props) {\n  return <div style={{ flex: 1, ...style }} className={cx(className)} />;\n}\n","import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Absolute({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'absolute' }} className={className}>\n      {children}\n    </div>\n  );\n}\n","import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Relative({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'relative' }} className={className}>\n      {children}\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  usePreviewConfig\n} from '../../config/useConfig';\nimport {\n  emojiByUnified,\n  emojiName,\n  emojiUnified\n} from '../../dataUtils/emojiSelectors';\nimport { useEmojiPreviewEvents } from '../../hooks/useEmojiPreviewEvents';\nimport { useIsSkinToneInPreview } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Space from '../Layout/Space';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport './Preview.css';\nimport { ViewOnlyEmoji } from '../emoji/ViewOnlyEmoji';\nimport { SkinTonePickerMenu } from '../header/SkinTonePicker';\n\nexport function Preview() {\n  const previewConfig = usePreviewConfig();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n\n  if (!previewConfig.showPreview) {\n    return null;\n  }\n\n  return (\n    <Flex className=\"epr-preview\">\n      <PreviewBody />\n      <Space />\n      {isSkinToneInPreview ? <SkinTonePickerMenu /> : null}\n    </Flex>\n  );\n}\n\nexport function PreviewBody() {\n  const previewConfig = usePreviewConfig();\n  const [previewEmoji, setPreviewEmoji] = useState<PreviewEmoji>(null);\n  const emojiStyle = useEmojiStyleConfig();\n  const [variationPickerEmoji] = useEmojiVariationPickerState();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEmojiPreviewEvents(previewConfig.showPreview, setPreviewEmoji);\n\n  const emoji = emojiByUnified(\n    previewEmoji?.unified ?? previewEmoji?.originalUnified\n  );\n\n  const show = emoji != null && previewEmoji != null;\n\n  return <PreviewContent />;\n\n  function PreviewContent() {\n    const defaultEmoji =\n      variationPickerEmoji ?? emojiByUnified(previewConfig.defaultEmoji);\n    if (!defaultEmoji) {\n      return null;\n    }\n    const defaultText = variationPickerEmoji\n      ? emojiName(variationPickerEmoji)\n      : previewConfig.defaultCaption;\n\n    return (\n      <>\n        <div>\n          {show ? (\n            <ViewOnlyEmoji\n              unified={previewEmoji?.unified as string}\n              emoji={emoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : defaultEmoji ? (\n            <ViewOnlyEmoji\n              unified={emojiUnified(defaultEmoji)}\n              emoji={defaultEmoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : null}\n        </div>\n        {show ? (\n          <div className=\"epr-preview-emoji-label\">{emojiName(emoji)}</div>\n        ) : (\n          <div className=\"epr-preview-emoji-label\">{defaultText}</div>\n        )}\n      </>\n    );\n  }\n}\n\nexport type PreviewEmoji = null | {\n  unified: string;\n  originalUnified: string;\n};\n","import * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { focusElement } from '../DomUtils/focusElement';\nimport {\n  buttonFromTarget,\n  originalUnifiedFromEmojiElement,\n  unifiedFromEmojiElement\n} from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { PreviewEmoji } from '../components/footer/Preview';\n\nimport {\n  useAllowMouseMove,\n  useIsMouseDisallowed\n} from './useDisallowMouseMove';\n\nexport function useEmojiPreviewEvents(\n  allow: boolean,\n  setPreviewEmoji: React.Dispatch<React.SetStateAction<PreviewEmoji>>\n) {\n  const BodyRef = useBodyRef();\n  const isMouseDisallowed = useIsMouseDisallowed();\n  const allowMouseMove = useAllowMouseMove();\n\n  useEffect(() => {\n    if (!allow) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('keydown', onEscape, {\n      passive: true\n    });\n\n    bodyRef?.addEventListener('mouseover', onMouseOver, true);\n\n    bodyRef?.addEventListener('focus', onEnter, true);\n\n    bodyRef?.addEventListener('mouseout', onLeave, {\n      passive: true\n    });\n    bodyRef?.addEventListener('blur', onLeave, true);\n\n    function onEnter(e: FocusEvent) {\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (!button) {\n        return onLeave();\n      }\n\n      const unified = unifiedFromEmojiElement(button);\n      const originalUnified = originalUnifiedFromEmojiElement(button);\n\n      if (!unified || !originalUnified) {\n        return onLeave();\n      }\n\n      setPreviewEmoji({\n        unified,\n        originalUnified\n      });\n    }\n    function onLeave(e?: FocusEvent | MouseEvent) {\n      if (e) {\n        const relatedTarget = e.relatedTarget as HTMLElement;\n\n        if (!buttonFromTarget(relatedTarget)) {\n          return setPreviewEmoji(null);\n        }\n      }\n\n      setPreviewEmoji(null);\n    }\n    function onEscape(e: KeyboardEvent) {\n      if (e.key === 'Escape') {\n        setPreviewEmoji(null);\n      }\n    }\n\n    function onMouseOver(e: MouseEvent) {\n      if (isMouseDisallowed()) {\n        return;\n      }\n\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (button) {\n        focusElement(button);\n      }\n    }\n\n    return () => {\n      bodyRef?.removeEventListener('mouseover', onMouseOver);\n      bodyRef?.removeEventListener('mouseout', onLeave);\n      bodyRef?.removeEventListener('focus', onEnter, true);\n      bodyRef?.removeEventListener('blur', onLeave, true);\n      bodyRef?.removeEventListener('keydown', onEscape);\n    };\n  }, [BodyRef, allow, setPreviewEmoji, isMouseDisallowed, allowMouseMove]);\n}\n","import { useSearchTermState } from '../components/context/PickerContext';\n\nexport default function useIsSearchMode(): boolean {\n  const [searchTerm] = useSearchTermState();\n\n  return !!searchTerm;\n}\n","import { cx } from 'flairup';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport './CategoryNavigation.css';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport { useCategoriesConfig } from '../../config/useConfig';\nimport { useActiveCategoryScrollDetection } from '../../hooks/useActiveCategoryScrollDetection';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useScrollCategoryIntoView } from '../../hooks/useScrollCategoryIntoView';\nimport { useShouldHideCustomEmojis } from '../../hooks/useShouldHideCustomEmojis';\nimport { isCustomCategory } from '../../typeRefinements/typeRefinements';\nimport { Button } from '../atoms/Button';\nimport { useCategoryNavigationRef } from '../context/ElementRefContext';\n\nexport function CategoryNavigation() {\n  const [activeCategory, setActiveCategory] = useState<string | null>(null);\n  const scrollCategoryIntoView = useScrollCategoryIntoView();\n  useActiveCategoryScrollDetection(setActiveCategory);\n  const isSearchMode = useIsSearchMode();\n\n  const categoriesConfig = useCategoriesConfig();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n  const hideCustomCategory = useShouldHideCustomEmojis();\n\n  return (\n    <div\n      className=\"epr-category-nav\"\n      role=\"tablist\"\n      aria-label=\"Category navigation\"\n      id=\"epr-category-nav-id\"\n      ref={CategoryNavigationRef}\n    >\n      {categoriesConfig.map(categoryConfig => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n        const isActiveCategory = category === activeCategory;\n\n        if (isCustomCategory(categoryConfig) && hideCustomCategory) {\n          return null;\n        }\n\n        return (\n          <Button\n            tabIndex={isSearchMode || isActiveCategory ? -1 : 0}\n            className={cx('epr-cat-btn', `epr-icn-${category}`, {\n              [ClassNames.active]: isActiveCategory\n            })}\n            key={category}\n            onClick={() => {\n              setActiveCategory(category);\n              scrollCategoryIntoView(category);\n            }}\n            aria-label={categoryNameFromCategoryConfig(categoryConfig)}\n            aria-selected={isActiveCategory}\n            role=\"tab\"\n            aria-controls=\"epr-category-nav-id\"\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import { scrollTo } from '../DomUtils/scrollTo';\nimport { NullableElement } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  usePickerMainRef\n} from '../components/context/ElementRefContext';\n\nexport function useScrollCategoryIntoView() {\n  const BodyRef = useBodyRef();\n  const PickerMainRef = usePickerMainRef();\n\n  return function scrollCategoryIntoView(category: string): void {\n    if (!BodyRef.current) {\n      return;\n    }\n    const $category = BodyRef.current?.querySelector(\n      `[data-name=\"${category}\"]`\n    ) as NullableElement;\n\n    if (!$category) {\n      return;\n    }\n\n    const offsetTop = $category.offsetTop || 0;\n\n    scrollTo(PickerMainRef.current, offsetTop);\n  };\n}\n","import { useEffect } from 'react';\n\nimport { categoryNameFromDom } from '../DomUtils/categoryNameFromDom';\nimport { asSelectors, ClassNames } from '../DomUtils/classNames';\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nexport function useActiveCategoryScrollDetection(\n  setActiveCategory: (category: string) => void\n) {\n  const BodyRef = useBodyRef();\n\n  useEffect(() => {\n    const visibleCategories = new Map();\n    const bodyRef = BodyRef.current;\n    const observer = new IntersectionObserver(\n      entries => {\n        if (!bodyRef) {\n          return;\n        }\n\n        for (const entry of entries) {\n          const id = categoryNameFromDom(entry.target);\n          visibleCategories.set(id, entry.intersectionRatio);\n        }\n\n        const ratios = Array.from(visibleCategories);\n        const lastCategory = ratios[ratios.length - 1];\n\n        if (lastCategory[1] == 1) {\n          return setActiveCategory(lastCategory[0]);\n        }\n\n        for (const [id, ratio] of ratios) {\n          if (ratio) {\n            setActiveCategory(id);\n            break;\n          }\n        }\n      },\n      {\n        threshold: [0, 1]\n      }\n    );\n    bodyRef?.querySelectorAll(asSelectors(ClassNames.category)).forEach(el => {\n      observer.observe(el);\n    });\n  }, [BodyRef, setActiveCategory]);\n}\n","export function categoryNameFromDom($category: Element | null): string | null {\n  return $category?.getAttribute('data-name') ?? null;\n}\n","import { useCustomEmojisConfig } from '../config/useConfig';\n\nexport function useShouldHideCustomEmojis() {\n  const customCategoryConfig = useCustomEmojisConfig();\n\n  if (!customCategoryConfig) {\n    return false;\n  }\n\n  return customCategoryConfig.length === 0;\n}\n","import * as React from 'react';\n\nimport { ClassNames, asSelectors } from '../../DomUtils/classNames';\nimport { getNormalizedSearchTerm } from '../../hooks/useFilter';\n\nconst SCOPE = `${asSelectors(ClassNames.emojiPicker)} ${asSelectors(\n  ClassNames.emojiList\n)}`;\n\nconst EMOJI_BUTTON = ['button', asSelectors(ClassNames.emoji)].join('');\nconst CATEGORY = asSelectors(ClassNames.category);\n\nexport function CssSearch({ value }: { value: undefined | string }) {\n  if (!value) {\n    return null;\n  }\n\n  const q = genQuery(value);\n\n  return (\n    <style>{`\n    ${SCOPE} ${EMOJI_BUTTON} {\n      display: none;\n    }\n\n\n    ${SCOPE} ${q} {\n      display: flex;\n    }\n\n    ${SCOPE} ${CATEGORY}:not(:has(${q})) {\n      display: none;\n    }\n  `}</style>\n  );\n}\n\nfunction genQuery(value: string): string {\n  return [\n    EMOJI_BUTTON,\n    '[data-full-name*=\"',\n    getNormalizedSearchTerm(value),\n    '\"]'\n  ].join('');\n}\n","import { useCallback, useEffect, useMemo } from 'react';\n\nimport { hasNextElementSibling } from '../DomUtils/elementPositionInRow';\nimport {\n  focusNextElementSibling,\n  focusPrevElementSibling\n} from '../DomUtils/focusElement';\nimport { getActiveElement } from '../DomUtils/getActiveElement';\nimport {\n  focusAndClickFirstVisibleEmoji,\n  focusFirstVisibleEmoji,\n  focusNextVisibleEmoji,\n  focusPrevVisibleEmoji,\n  focusVisibleEmojiOneRowDown,\n  focusVisibleEmojiOneRowUp\n} from '../DomUtils/keyboardNavigation';\nimport { useScrollTo } from '../DomUtils/scrollTo';\nimport { buttonFromTarget } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  useCategoryNavigationRef,\n  usePickerMainRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\nimport { useSkinToneFanOpenState } from '../components/context/PickerContext';\nimport { useSearchDisabledConfig } from '../config/useConfig';\n\nimport {\n  useCloseAllOpenToggles,\n  useHasOpenToggles\n} from './useCloseAllOpenToggles';\nimport { useDisallowMouseMove } from './useDisallowMouseMove';\nimport { useAppendSearch, useClearSearch } from './useFilter';\nimport {\n  useFocusCategoryNavigation,\n  useFocusSearchInput,\n  useFocusSkinTonePicker\n} from './useFocus';\nimport useIsSearchMode from './useIsSearchMode';\nimport useSetVariationPicker from './useSetVariationPicker';\nimport {\n  useIsSkinToneInPreview,\n  useIsSkinToneInSearch\n} from './useShouldShowSkinTonePicker';\n\nenum KeyboardEvents {\n  ArrowDown = 'ArrowDown',\n  ArrowUp = 'ArrowUp',\n  ArrowLeft = 'ArrowLeft',\n  ArrowRight = 'ArrowRight',\n  Escape = 'Escape',\n  Enter = 'Enter',\n  Space = ' '\n}\n\nexport function useKeyboardNavigation() {\n  usePickerMainKeyboardEvents();\n  useSearchInputKeyboardEvents();\n  useSkinTonePickerKeyboardEvents();\n  useCategoryNavigationKeyboardEvents();\n  useBodyKeyboardEvents();\n}\n\nfunction usePickerMainKeyboardEvents() {\n  const PickerMainRef = usePickerMainRef();\n  const clearSearch = useClearSearch();\n  const scrollTo = useScrollTo();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n  const hasOpenToggles = useHasOpenToggles();\n  const disallowMouseMove = useDisallowMouseMove();\n\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        disallowMouseMove();\n        switch (key) {\n          // eslint-disable-next-line no-fallthrough\n          case KeyboardEvents.Escape:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              return;\n            }\n            clearSearch();\n            scrollTo(0);\n            focusSearchInput();\n            break;\n        }\n      },\n    [\n      scrollTo,\n      clearSearch,\n      closeAllOpenToggles,\n      focusSearchInput,\n      hasOpenToggles,\n      disallowMouseMove\n    ]\n  );\n\n  useEffect(() => {\n    const current = PickerMainRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, scrollTo, onKeyDown]);\n}\n\nfunction useSearchInputKeyboardEvents() {\n  const focusSkinTonePicker = useFocusSkinTonePicker();\n  const PickerMainRef = usePickerMainRef();\n  const BodyRef = useBodyRef();\n  const SearchInputRef = useSearchInputRef();\n  const [, setSkinToneFanOpenState] = useSkinToneFanOpenState();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            if (!isSkinToneInSearch) {\n              return;\n            }\n            event.preventDefault();\n            setSkinToneFanOpenState(true);\n            focusSkinTonePicker();\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            goDownFromSearchInput();\n            break;\n          case KeyboardEvents.Enter:\n            event.preventDefault();\n            focusAndClickFirstVisibleEmoji(BodyRef.current);\n            break;\n        }\n      },\n    [\n      focusSkinTonePicker,\n      goDownFromSearchInput,\n      setSkinToneFanOpenState,\n      BodyRef,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SearchInputRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, onKeyDown]);\n}\n\nfunction useSkinTonePickerKeyboardEvents() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const focusSearchInput = useFocusSearchInput();\n  const SearchInputRef = useSearchInputRef();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        if (isSkinToneInSearch) {\n          switch (key) {\n            case KeyboardEvents.ArrowLeft:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowRight:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (isOpen) {\n                setIsOpen(false);\n              }\n              goDownFromSearchInput();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n\n        if (isSkinToneInPreview) {\n          switch (key) {\n            case KeyboardEvents.ArrowUp:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n      },\n    [\n      isOpen,\n      focusSearchInput,\n      setIsOpen,\n      goDownFromSearchInput,\n      onType,\n      isSkinToneInPreview,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SkinTonePickerRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [SkinTonePickerRef, SearchInputRef, isOpen, onKeyDown]);\n}\n\nfunction useCategoryNavigationKeyboardEvents() {\n  const focusSearchInput = useFocusSearchInput();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n  const BodyRef = useBodyRef();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            focusSearchInput();\n            break;\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            focusFirstVisibleEmoji(BodyRef.current);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [BodyRef, focusSearchInput, onType]\n  );\n\n  useEffect(() => {\n    const current = CategoryNavigationRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [CategoryNavigationRef, BodyRef, onKeyDown]);\n}\n\nfunction useBodyKeyboardEvents() {\n  const BodyRef = useBodyRef();\n  const goUpFromBody = useGoUpFromBody();\n  const setVariationPicker = useSetVariationPicker();\n  const hasOpenToggles = useHasOpenToggles();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        const activeElement = buttonFromTarget(getActiveElement());\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowDown(activeElement);\n            break;\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowUp(activeElement, goUpFromBody);\n            break;\n          case KeyboardEvents.Space:\n            event.preventDefault();\n            setVariationPicker(event.target as HTMLElement);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [\n      goUpFromBody,\n      onType,\n      setVariationPicker,\n      hasOpenToggles,\n      closeAllOpenToggles\n    ]\n  );\n\n  useEffect(() => {\n    const current = BodyRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [BodyRef, onKeyDown]);\n}\n\nfunction useGoDownFromSearchInput() {\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    function goDownFromSearchInput() {\n      if (isSearchMode) {\n        return focusFirstVisibleEmoji(BodyRef.current);\n      }\n      return focusCategoryNavigation();\n    },\n    [BodyRef, focusCategoryNavigation, isSearchMode]\n  );\n}\n\nfunction useGoUpFromBody() {\n  const focusSearchInput = useFocusSearchInput();\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n\n  return useCallback(\n    function goUpFromEmoji() {\n      if (isSearchMode) {\n        return focusSearchInput();\n      }\n      return focusCategoryNavigation();\n    },\n    [focusSearchInput, isSearchMode, focusCategoryNavigation]\n  );\n}\n\nfunction focusNextSkinTone(exitLeft: () => void) {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  if (!hasNextElementSibling(currentSkinTone)) {\n    exitLeft();\n  }\n\n  focusNextElementSibling(currentSkinTone);\n}\n\nfunction focusPrevSkinTone() {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  focusPrevElementSibling(currentSkinTone);\n}\n\nfunction useOnType() {\n  const appendSearch = useAppendSearch();\n  const focusSearchInput = useFocusSearchInput();\n  const searchDisabled = useSearchDisabledConfig();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  return function onType(event: KeyboardEvent) {\n    const { key } = event;\n\n    if (hasModifier(event) || searchDisabled) {\n      return;\n    }\n\n    if (key.match(/(^[a-zA-Z0-9]$){1}/)) {\n      event.preventDefault();\n      closeAllOpenToggles();\n      focusSearchInput();\n      appendSearch(key);\n    }\n  };\n}\n\nfunction hasModifier(event: KeyboardEvent): boolean {\n  const { metaKey, ctrlKey, altKey } = event;\n\n  return metaKey || ctrlKey || altKey;\n}\n","import { cx } from 'flairup';\nimport * as React from 'react';\nimport { useState } from 'react';\n\nimport {\n  useAutoFocusSearchConfig,\n  useSearchDisabledConfig,\n  useSearchPlaceHolderConfig\n} from '../../config/useConfig';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport { useClearSearch, useFilter } from '../../hooks/useFilter';\nimport { useIsSkinToneInSearch } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSearchInputRef } from '../context/ElementRefContext';\n\nimport './Search.css';\nimport { CssSearch } from './CssSearch';\nimport { SkinTonePicker } from './SkinTonePicker';\n\nexport function SearchContainer() {\n  const searchDisabled = useSearchDisabledConfig();\n\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  if (searchDisabled) {\n    return null;\n  }\n\n  return (\n    <Flex className=\"epr-header-overlay\">\n      <Search />\n\n      {isSkinToneInSearch ? <SkinTonePicker /> : null}\n    </Flex>\n  );\n}\n\nexport function Search() {\n  const [inc, setInc] = useState(0);\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const SearchInputRef = useSearchInputRef();\n  const clearSearch = useClearSearch();\n  const placeholder = useSearchPlaceHolderConfig();\n  const autoFocus = useAutoFocusSearchConfig();\n  const { statusSearchResults, searchTerm, onChange } = useFilter();\n\n  const input = SearchInputRef?.current;\n  const value = input?.value;\n\n  return (\n    <Relative className=\"epr-search-container\">\n      <CssSearch value={value} />\n      <input\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus={autoFocus}\n        aria-label={'Type to search for an emoji'}\n        onFocus={closeAllOpenToggles}\n        className=\"epr-search\"\n        type=\"text\"\n        aria-controls=\"epr-search-id\"\n        placeholder={placeholder}\n        onChange={event => {\n          setInc(inc + 1);\n          setTimeout(() => {\n            onChange(event?.target?.value ?? value);\n          });\n        }}\n        ref={SearchInputRef}\n      />\n      {searchTerm ? (\n        <div\n          role=\"status\"\n          className={cx(\n            'epr-status-search-results',\n            'epr-status-visually-hidden'\n          )}\n          aria-live=\"polite\"\n          id=\"epr-search-id\"\n          aria-atomic=\"true\"\n        >\n          {statusSearchResults}\n        </div>\n      ) : null}\n      <div className=\"epr-icn-search\" />\n      <Button\n        className={cx('epr-btn-clear-search', 'epr-visible-on-search-only')}\n        onClick={clearSearch}\n        aria-label=\"Clear\"\n        title=\"Clear\"\n      >\n        <div className=\"epr-icn-clear-search\" />\n      </Button>\n    </Relative>\n  );\n}\n","import * as React from 'react';\n\nimport Relative from '../Layout/Relative';\nimport { CategoryNavigation } from '../navigation/CategoryNavigation';\n\nimport './Header.css';\nimport { SearchContainer } from './Search';\n\nexport function Header() {\n  return (\n    <Relative className=\"epr-header\">\n      <SearchContainer />\n      <CategoryNavigation />\n    </Relative>\n  );\n}\n","import { NullableElement } from './selectors';\n\nexport function getActiveElement() {\n  return document.activeElement as NullableElement;\n}\n","import { GetEmojiUrl } from '../components/emoji/BaseEmojiProps';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified, emojiVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nexport function preloadEmoji(\n  getEmojiUrl: GetEmojiUrl,\n  emoji: undefined | DataEmoji,\n  emojiStyle: EmojiStyle\n): void {\n  if (!emoji) {\n    return;\n  }\n\n  if (emojiStyle === EmojiStyle.NATIVE) {\n    return;\n  }\n\n  const unified = emojiUnified(emoji);\n\n  if (preloadedEmojs.has(unified)) {\n    return;\n  }\n\n  emojiVariations(emoji).forEach((variation) => {\n    const emojiUrl = getEmojiUrl(variation, emojiStyle);\n    preloadImage(emojiUrl);\n  });\n\n  preloadedEmojs.add(unified);\n}\n\nexport const preloadedEmojs: Set<string> = new Set();\n\nfunction preloadImage(url: string): void {\n  const image = new Image();\n  image.src = url;\n}\n","import { cx } from 'flairup';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { stylesheet } from '../../Stylesheet/stylesheet';\nimport {\n  useClassNameConfig,\n  useStyleConfig,\n  useThemeConfig\n} from '../../config/useConfig';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useKeyboardNavigation } from '../../hooks/useKeyboardNavigation';\nimport { useOnFocus } from '../../hooks/useOnFocus';\nimport { Theme } from '../../types/exposedTypes';\nimport { usePickerMainRef } from '../context/ElementRefContext';\nimport { PickerContextProvider } from '../context/PickerContext';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport default function PickerMain({ children }: Props) {\n  return (\n    <PickerContextProvider>\n      <PickerRootElement>{children}</PickerRootElement>\n    </PickerContextProvider>\n  );\n}\n\ntype RootProps = Readonly<{\n  className?: string;\n  style?: React.CSSProperties;\n  children: React.ReactNode;\n}>;\n\nfunction PickerRootElement({ children }: RootProps) {\n  const theme = useThemeConfig();\n  const searchModeActive = useIsSearchMode();\n  const PickerMainRef = usePickerMainRef();\n  const className = useClassNameConfig();\n  const style = useStyleConfig();\n\n  useKeyboardNavigation();\n  useOnFocus();\n\n  return (\n    <aside\n      className={cx(\n        styles.main,\n        {\n          [ClassNames.searchActive]: searchModeActive,\n          [ClassNames.darkTheme]: theme === Theme.DARK,\n          [ClassNames.autoTheme]: theme === Theme.AUTO\n        },\n        className\n      )}\n      ref={PickerMainRef}\n      style={style}\n    >\n      {children}\n    </aside>\n  );\n}\n\nconst styles = stylesheet.create({\n  main: {\n    '.': ['epr-main', ClassNames.emojiPicker],\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderRadius: 'var(--epr-picker-border-radius)',\n    borderColor: 'var(--epr-picker-border-color)'\n  }\n});\n","import { useEffect } from 'react';\n\nimport { buttonFromTarget, emojiFromElement } from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useEmojiStyleConfig, useGetEmojiUrlConfig } from '../config/useConfig';\nimport { emojiHasVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nimport { preloadEmoji } from './preloadEmoji';\n\nexport function useOnFocus() {\n  const BodyRef = useBodyRef();\n  const emojiStyle = useEmojiStyleConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEffect(() => {\n    if (emojiStyle === EmojiStyle.NATIVE) {\n      return;\n    }\n\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('focusin', onFocus);\n\n    return () => {\n      bodyRef?.removeEventListener('focusin', onFocus);\n    };\n\n    function onFocus(event: FocusEvent) {\n      const button = buttonFromTarget(event.target as HTMLElement);\n\n      if (!button) {\n        return;\n      }\n\n      const [emoji] = emojiFromElement(button);\n\n      if (!emoji) {\n        return;\n      }\n\n      if (emojiHasVariations(emoji)) {\n        preloadEmoji(getEmojiUrl, emoji, emojiStyle);\n      }\n    }\n  }, [BodyRef, emojiStyle, getEmojiUrl]);\n}\n","import * as React from 'react';\n\nimport { Body } from './components/body/Body';\nimport { ElementRefContextProvider } from './components/context/ElementRefContext';\nimport { PickerConfigProvider } from './components/context/PickerConfigContext';\nimport { Preview } from './components/footer/Preview';\nimport { Header } from './components/header/Header';\nimport PickerMain from './components/main/PickerMain';\n\nimport './EmojiPickerReact.css';\nimport { PickerProps } from './index';\n\nfunction EmojiPicker(props: PickerProps) {\n  return (\n    <ElementRefContextProvider>\n      <PickerConfigProvider {...props}>\n        <PickerMain>\n          <Header />\n          <Body />\n          <Preview />\n        </PickerMain>\n      </PickerConfigProvider>\n    </ElementRefContextProvider>\n  );\n}\n\n// eslint-disable-next-line complexity\nexport default React.memo(EmojiPicker, (prev, next) => {\n  const prevCustomEmojis = prev.customEmojis ?? [];\n  const nextCustomEmojis = next.customEmojis ?? [];\n  return (\n    prev.emojiVersion === next.emojiVersion &&\n    prev.searchPlaceHolder === next.searchPlaceHolder &&\n    prev.searchPlaceholder === next.searchPlaceholder &&\n    prev.defaultSkinTone === next.defaultSkinTone &&\n    prev.skinTonesDisabled === next.skinTonesDisabled &&\n    prev.autoFocusSearch === next.autoFocusSearch &&\n    prev.emojiStyle === next.emojiStyle &&\n    prev.theme === next.theme &&\n    prev.suggestedEmojisMode === next.suggestedEmojisMode &&\n    prev.lazyLoadEmojis === next.lazyLoadEmojis &&\n    prev.className === next.className &&\n    prev.height === next.height &&\n    prev.width === next.width &&\n    prev.style === next.style &&\n    prev.searchDisabled === next.searchDisabled &&\n    prev.skinTonePickerLocation === next.skinTonePickerLocation &&\n    prevCustomEmojis.length === nextCustomEmojis.length\n  );\n});\n","import * as React from 'react';\n\nexport default class ErrorBoundary extends React.Component<\n  { children: React.ReactNode },\n  { hasError: boolean }\n> {\n  constructor(props: { children: React.ReactNode }) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    // eslint-disable-next-line no-console\n    console.error('Emoji Picker React failed to render:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n","import * as React from 'react';\n\nimport { EmojiStyle } from '../../types/exposedTypes';\n\nimport { GetEmojiUrl } from './BaseEmojiProps';\nimport { ViewOnlyEmoji } from './ViewOnlyEmoji';\n\nexport function ExportedEmoji({\n  unified,\n  size = 32,\n  emojiStyle = EmojiStyle.APPLE,\n  lazyLoad = false,\n  getEmojiUrl,\n  emojiUrl\n}: {\n  unified: string;\n  emojiStyle?: EmojiStyle;\n  size?: number;\n  lazyLoad?: boolean;\n  getEmojiUrl?: GetEmojiUrl;\n  emojiUrl?: string;\n}) {\n  if (!unified && !emojiUrl && !getEmojiUrl) {\n    return null;\n  }\n\n  return (\n    <ViewOnlyEmoji\n      unified={unified}\n      size={size}\n      emojiStyle={emojiStyle}\n      lazyLoad={lazyLoad}\n      getEmojiUrl={emojiUrl ? () => emojiUrl : getEmojiUrl}\n    />\n  );\n}\n","import * as React from 'react';\n\nimport EmojiPickerReact from './EmojiPickerReact';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { PickerConfig } from './config/config';\nimport {\n  MutableConfigContext,\n  useDefineMutableConfig\n} from './config/mutableConfig';\n\nexport { ExportedEmoji as Emoji } from './components/emoji/ExportedEmoji';\n\nexport {\n  EmojiStyle,\n  SkinTones,\n  Theme,\n  Categories,\n  EmojiClickData,\n  SuggestionMode,\n  SkinTonePickerLocation\n} from './types/exposedTypes';\n\nexport interface PickerProps extends PickerConfig {}\n\nexport default function EmojiPicker(props: PickerProps) {\n  const MutableConfigRef = useDefineMutableConfig({\n    onEmojiClick: props.onEmojiClick\n  });\n\n  return (\n    <ErrorBoundary>\n      <MutableConfigContext.Provider value={MutableConfigRef}>\n        <EmojiPickerReact {...props} />\n      </MutableConfigContext.Provider>\n    </ErrorBoundary>\n  );\n}\n"],"names":["ClassNames","asSelectors","classNames","map","c","join","stylesheet","createSheet","focusElement","element","requestAnimationFrame","focus","focusPrevElementSibling","previousElementSibling","focusNextElementSibling","nextElementSibling","focusFirstElementChild","firstElementChild","ElementRefContextProvider","children","PickerMainRef","React","AnchoredEmojiRef","BodyRef","SearchInputRef","SkinTonePickerRef","CategoryNavigationRef","VariationPickerRef","ElementRefContext","Provider","value","SuggestionMode","EmojiStyle","Theme","SkinTones","Categories","SkinTonePickerLocation","useElementRef","usePickerMainRef","useAnchoredEmojiRef","useSetAnchoredEmojiRef","target","current","useBodyRef","useSearchInputRef","useSkinTonePickerRef","useCategoryNavigationRef","categoriesOrdered","SUGGESTED","CUSTOM","SMILEYS_PEOPLE","ANIMALS_NATURE","FOOD_DRINK","TRAVEL_PLACES","ACTIVITIES","OBJECTS","SYMBOLS","FLAGS","SuggestedRecent","name","category","configByCategory","baseCategoriesConfig","modifiers","categoryFromCategoryConfig","categoryNameFromCategoryConfig","getBaseConfigByCategory","modifier","Object","assign","EmojiProperties","skinToneVariations","NEUTRAL","LIGHT","MEDIUM_LIGHT","MEDIUM","MEDIUM_DARK","DARK","skinTonesNamed","entries","reduce","acc","skinTonesMapped","mapped","skinTone","alphaNumericEmojiIndex","indexEmoji","emoji","emojiNames","flat","toLowerCase","replace","split","forEach","char","emojiUnified","emojiName","unifiedWithoutSkinTone","unified","splat","splice","emojiHasVariations","emojiVariations","find","variation","includes","emojiVariationUnified","emojisByCategory","emojis","emojiUrlByUnified","emojiStyle","TWITTER","GOOGLE","FACEBOOK","APPLE","cdnUrl","variations","length","emojiByUnified","allEmojisByUnified","withoutSkinTone","setTimeout","allEmojis","searchIndex","values","Emoji","KNOWN_FAILING_EMOJIS","mergeConfig","userConfig","customEmojis","base","basePickerConfig","previewConfig","config","categories","userCategoriesConfig","extra","suggestionMode","RECENT","_userCategoriesConfig","mergeCategoriesConfig","suggestedEmojisMode","emojiData","names","id","added_in","imgUrl","customToRegularEmoji","push","skinTonePickerLocation","searchDisabled","PREVIEW","autoFocusSearch","className","defaultSkinTone","emojiVersion","getEmojiUrl","height","lazyLoadEmojis","basePreviewConfig","searchPlaceHolder","searchPlaceholder","SEARCH","skinTonesDisabled","style","FREQUENT","theme","unicodeToHide","Set","width","defaultEmoji","defaultCaption","showPreview","ConfigContext","PickerConfigProvider","mergedConfig","setMergedConfig","_mergedConfig$customE","_config$customEmojis2","useSetConfig","usePickerConfig","MutableConfigContext","createContext","emptyFunc","useSkinTonesDisabledConfig","useEmojiStyleConfig","useCategoriesConfig","usePreviewConfig","useSearchDisabledConfig","useSkinTonePickerLocationConfig","useGetEmojiUrlConfig","getDimension","dimensionConfig","useDebouncedState","initialValue","delay","useState","state","setState","timer","useRef","Promise","resolve","clearTimeout","window","_window","useDisallowedEmojis","DisallowedEmojisRef","emojiVersionConfig","useMemo","parseFloat","Number","isNaN","disallowedEmojis","supportedLevel","addedIn","addedInNewerVersion","PickerContextProvider","dispatch","filterRef","disallowClickRef","disallowMouseRef","disallowedEmojisRef","suggestedUpdateState","Date","now","searchTerm","skinToneFanOpenState","activeSkinTone","activeCategoryState","emojisThatFailedToLoadState","emojiVariationPickerState","isPastInitialLoad","useEffect","PickerContext","useFilterRef","useDisallowMouseRef","useSearchTermState","useActiveSkinToneState","useEmojisThatFailedToLoadState","useEmojiVariationPickerState","useSkinToneFanOpenState","useUpdateSuggested","setsuggestedUpdate","useAllowMouseMove","DisallowMouseRef","useIsMouseDisallowed","elementCountInRow","parent","parentWidth","getBoundingClientRect","elementWidth","Math","floor","elementIndexInRow","elementLeft","left","parentLeft","rowNumber","elementHeight","elementTop","top","parentTop","round","getRowElements","elements","row","elementsInRow","lastRow","slice","getElementInRow","indexInRow","rowElements","EmojiButtonSelector","VisibleEmojiSelector","visible","hidden","buttonFromTarget","emojiElement","closest","emojiFromElement","originalUnified","originalUnifiedFromEmojiElement","unifiedFromEmojiElement","clientHeight","emojiTrueOffsetTop","button","closestCategory","labelHeight","categoryLabelHeight","elementOffsetTop","categoryWithoutLabel","querySelector","categoryContent","queryScrollBody","root","matches","scrollBody","emojiDistanceFromScrollTop","closestScrollBody","_closestScrollBody","scrollTop","offsetTop","elementOffsetLeft","offsetLeft","dataset","elementDataSet","isVisibleEmoji","classList","contains","isHidden","allVisibleEmojis","Array","from","querySelectorAll","lastVisibleEmoji","last","prevVisibleEmoji","prev","prevCategory","firstVisibleEmoji","parentBottom","bottom","elementBottom","firstVisibleElementInContainer","nextCategory","next","closestCategoryContent","parseNativeEmoji","hex","String","fromCodePoint","parseInt","getSuggested","mode","localStorage","recent","JSON","parse","_window2","getItem","sort","a","b","count","isCustomEmoji","undefined","useCloseAllOpenToggles","variationPicker","setVariationPicker","skinToneFanOpen","setSkinToneFanOpen","useCallback","useHasOpenToggles","useSetVariationPicker","setAnchoredEmojiRef","setEmojiVariationPicker","emojiFromEvent","event","Boolean","parentElement","_element$parentElemen","scrollTo","$eprBody","scrollEmojiAboveLabel","isEmojiBehindLabel","by","scrollBy","useFocusSearchInput","useFocusCategoryNavigation","useClearSearch","applySearch","useApplySearch","focusSearchInput","setSearchTerm","then","hasMatch","keyword","some","getNormalizedSearchTerm","str","trim","styleInject","css","ref","insertAt","document","head","getElementsByTagName","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","Button","props","cx","ClickableEmojiButton","hiddenOnSearch","showVariations","hasVariations","EmojiImg","lazyLoad","onError","src","alt","external","loading","NativeEmoji","ViewOnlyEmoji","size","setEmojisThatFailedToLoad","fontSize","emojiToRender","NATIVE","add","ClickableEmoji","EmojiCategory","categoryConfig","categoryName","label","Suggested","suggestedUpdated","suggestedEmojisModeConfig","suggested","suggestedItem","original","key","EmojiList","renderdCategoriesCountRef","styles","emojiList","RenderCategory","isUnicodeHidden","filter","emojisThatFailedToLoad","isEmojiFiltered","isEmojiHidden","_filter$searchTerm","isEmojiFilteredBySearchTerm","failedToLoad","has","filteredOut","isEmojiDisallowed","emojisToPush","hiddenCounter","isDisallowed","Direction","create",".","listStyle","margin","padding","focusFirstVisibleEmoji","EmojiVariationPicker","pointerStyle","direction","Up","getMenuDirection","getTop","emojiOffsetTop","bodyRef","buttonHeight","Down","useVariationPickerTop","getPointerStyle","emojiTruOffsetLeft","clientWidth","usePointerStyle","pointing-up","concat","Body","closeAllOpenToggles","addEventListener","onScroll","passive","removeEventListener","useOnScroll","mouseDownTimerRef","onEmojiClick","useContext","updateSuggested","activeEmojiStyle","onClick","skinToneToUse","suspectedSkinTone","activeVariationFromUnified","nextList","existing","i","min","setItem","stringify","setSuggested","getImageUrl","imageUrl","isCustom","emojiClickOutput","onMouseDown","onMouseUp","useMouseDownHandlers","allowMouseMove","isMouseDisallowed","onMouseMove","useOnMouseMove","body","FlexDirection","SkinTonePickerDirection","flex","overflowY","overflowX","position","useIsSkinToneInSearch","useIsSkinToneInPreview","Flex","ROW","Space","Absolute","Relative","SkinTonePickerMenu","right","SkinTonePicker","VERTICAL","HORIZONTAL","isDisabled","isOpen","setIsOpen","setActiveSkinTone","expandedSize","ITEM_SIZE","vertical","open","flexBasis","skinToneVariation","active","transform","tabIndex","Preview","isSkinToneInPreview","PreviewBody","previewEmoji","setPreviewEmoji","variationPickerEmoji","allow","onEscape","onMouseOver","onEnter","onLeave","e","relatedTarget","useEmojiPreviewEvents","show","defaultText","useIsSearchMode","CategoryNavigation","activeCategory","setActiveCategory","scrollCategoryIntoView","$category","_BodyRef$current","visibleCategories","Map","observer","IntersectionObserver","entry","getAttribute","set","intersectionRatio","ratios","lastCategory","threshold","el","observe","useActiveCategoryScrollDetection","customCategoryConfig","isSearchMode","categoriesConfig","hideCustomCategory","role","isActiveCategory","isCustomCategory","KeyboardEvents","SCOPE","emojiPicker","EMOJI_BUTTON","CATEGORY","CssSearch","q","genQuery","SearchContainer","isSkinToneInSearch","Search","inc","setInc","clearSearch","placeholder","p","autoFocus","setFilterRef","setFilter","setter","useSetFilterRef","onChange","inputValue","nextValue","longestMatch","dict","longestMatchingKey","keys","findLongestMatch","filtered","filterEmojiObjectByKeyword","statusSearchResults","filterState","searchResultsCount","toString","getStatusSearchResults","useFilter","input","onFocus","_event$target","title","Header","getActiveElement","activeElement","useGoDownFromSearchInput","focusCategoryNavigation","focusNextSkinTone","exitLeft","currentSkinTone","focusPrevSkinTone","useOnType","appendSearch","metaKey","ctrlKey","altKey","hasModifier","match","preventDefault","preloadedEmojs","PickerMain","PickerRootElement","searchModeActive","useStyleConfig","focusSkinTonePicker","setSkinToneFanOpenState","goDownFromSearchInput","onKeyDown","hasOpenToggles","disallowMouseMove","Escape","usePickerMainKeyboardEvents","firstEmoji","ArrowRight","ArrowDown","Enter","click","onType","ArrowLeft","ArrowUp","useSkinTonePickerKeyboardEvents","useCategoryNavigationKeyboardEvents","goUpFromBody","nextVisibleEmoji","focusNextVisibleEmoji","focusPrevVisibleEmoji","index","nextRowElements","allElements","currentRow","nextRow","countInRow","parentHeight","hasNextRow","nextVisibleCategory","visibleEmojiOneRowDown","exitUp","prevRowElements","prevVisibleCategory","visibleEmojiOneRowUp","focusVisibleEmojiOneRowUp","useBodyKeyboardEvents","useKeyboardNavigation","url","Image","preloadEmoji","main","searchActive","darkTheme","autoTheme","AUTO","display","flexDirection","borderWidth","borderStyle","borderRadius","borderColor","EmojiPicker","prevCustomEmojis","nextCustomEmojis","ErrorBoundary","_this","hasError","getDerivedStateFromError","componentDidCatch","error","errorInfo","console","render","this","emojiUrl","MutableConfigRef","useDefineMutableConfig","EmojiPickerReact"],"mappings":"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"}